%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: Tk Canvas Widget
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 398 317
%%HiResBoundingBox: 0 0 398 317
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NimbusSansL
%!FontType1-1.0: NimbusSansL
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Mono L Regular) readonly def
/FamilyName (Nimbus Mono L) readonly def
/isFixedPitch true def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NimbusSansL def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-12 -186 612 624] readonly def
/StrokeWidth 0 def
/UniqueID 5020945 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 80 /P put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F88E0E90C57A803E35316A3AE46071630E94CBFACB39B9328C73806192120C65
60A07A9EFEF25F091E1E0E62CE4CCCF4339F0A1C80EC1D8CBB019716DC94F76B
4B166AE1FB661957FC17E3528F42E1A5C8A8706AF4586C7DAFB8C6D6BD8BD3FE
B43A4F4D1A99B9BB5520F58929EE5822B45F1D75F95458F3D3CA6DFD3265F3FE
A7893889281EB47DC1209A0F87B25D34F2F4714D187BD68606792B178AD1A406
0157710AE4599E9D73A66866144B5912906D59FEA06C6CB2FC5CE7292EA00B27
BC5E141AFBC93DC266BC9E295D5F44EA7B4AC8359D4B3A370BB36783411588A3
160395E5C93E142EF9F550792230EEE98C000BDAD1B0EB5AD50CFDAC544CD641
8DA7D158AD904F365B02DD48A3C75DC0B7B5B4D5D23332851C7A5244690AB237
30D7B4C4CBA4C85658774902E72079075183AF256125B7F6775067A951D82C33
61B2BABF054BAC9D4185B68B78EC33F0642B950887AFE3AE9B13DD3A2CC88590
984B644A0225A07592FF1DBCEBB70E91203F19D90073C48C49BBC68A279EA1F4
096A0C851A16B4876F77D93613C6D28F535E4B0446BBD4E8C1A767AF96EB0E07
1BF92D83B960B66DF31D934F11F6E3C8BA9F3C53F691F7F5D605F7312EFEB954
3FFE946C55B0D918170EF871130E0562286D2E07A0CAE197E2F55E6E5A5A5781
DEA43B84CFF0469FE9F331EBDC56E87B99B16C60C30F2292DB1DAB1DA2A56127
F785A48660F915D58ECF325FDD96454F36E336BE6F4F0CD97678AB8FA2519DEF
7FC40A253E2E1CD01B8419E2C2B05792422A6A91CE76CFD1DB11F233190C9662
10F711AEA708D104C9F8404854577CC48A05B75ACC190C7AC0199AC29F67E4F0
436FD4F1B925911C7791C7FCA51688EEA053DB6DAF6D7A7DBCE4DD943CA4BCB5
2DC58789099E98F74088135850CDEEFE034D387F6D2994C3020F7C75ED29F80D
87FFEC9DB79B912D0A7C4237B13B4ED4FCB13F370619E936502615EACC13A8B1
BFBA49BBECC700DE1D3D8183D231A1296EA80A3C8A803E1CF443860C65C80FB4
D39D71EC8F16A125A2B01368F4CC85967E5F2038B3CFCDA80D91FE3C62C5CF93
02EAF8523592341E3AEABBF0D9CACC5E72D635103F42226FBD4A9E48FB32C5ED
6E4FEEEBF22F3002C8766BDD414AC7B2B67509544AB8F56EB2657C79A49192B9
492A95D08DB0E97C161A77FC6887B7076F1F48FF80CA70219AAD50E6E3DC5B95
927ADDFB8ADEE492CC48F6122CDFD50042982EFECAE851B2A8C159FC1078B545
9C0100326228531AE286DE0960A025A81F0E97FF08EB94EEA1C3B612F0AB782A
CB41300A869E59B26A86609097A8D5911B8393D498D75DBF614C6FE8286409A6
2B1F3A2227CB8D4922E8E0B57551C0D5454D60F162FDA5FC9B1E3346ED1616AC
4B2B4974E1C12291EED69EAE0A65387A83F66142578F3A8FADD7F62300C5BD6C
9C2F5E3DC92905ABE4F53439E999F70E0717A5BBAA63FEF51AACCCC27449CDF3
6C4080F4F5A4AC2FF60795596DD2FBEDBFB23918AD7529313C1B1A86B5B1F4EA
7E04B7CDD1BA700BD08AD3D9C65C0A4D8B67624B96F92AD80310B75F6C9D372E
0C89EE2F0007B220617ED09660E37513CF1547543010D20AFAC9E94F04CA8B1E
D33CC1639D715F75364D010B619EF9BB89F9DCDCEB220F937E41B8157961EA78
D2CC8961479ABCE80CE1505792846C04217506EF0194219B0AB355014CB8E76E
859A43563F0342DE80A8D763167DB50097A6C4E59FB25FDAAF76839267E59E42
71FE4B5DABE5EFA6F4383B3319EB2C1EA568CFD3D63535A7CBE558D7906D4DC5
495C14E193B9DFF2993ECC12DDDC74B7965C8328122A5D57451454982F020026
BF4A4D8D1E108FEC1A5A73A2157F912C7596EF31194BA70C525A140C71B01A51
002FA6A8F69A3C9DF0135B9F8166D50D7948382EFC2012C7285E94B2760D62A2
5E5ED58C16696904A6ABECCA680B2DCEA5B9B2F3365C5F72E117EDF1C79D090D
AB60E68D1EF054B9C46854C67B9DB113836DEFBF5CAB886FC560D0E3D6368574
E918AED819F33E5E6C5968CFEFC712C5125B6A49E6C88D2C3532C44171D0B166
D06180D6901F492D9DFA8DEF1C9693A3221ECE6007F8C1D9365FA5B05556A81F
812916F248C95FB1A558D74D6DA0E389B8983D59C998BA54F37DEF90AEE3480C
94D578767BBE4F106DD54219A31BE8B78B5A1939C6A7B502630DCE8B04684FF1
46997E9D5639356C06F35FC2CCC9397830774603098CA1A5736C699D2FFE20EC
FD201E40D300C74FB7D56DAE28E3F33E3A41F3EFE6B9A63D4C81F6D40BA66210
58E489D62DB9B4ACAC24B317C212BB5DE6C91D5DD7714C820E40817B56BF348F
A6BE2C8AA1BD433E6F27D00387904F14B5FB59A404944B354A305E819F7AD76F
12A72F200E4A6B201A90E0C0E7AE1CE23AEF742164AD74DD41240256A9BEC1C3
12CC0EAB3337339409F5F688EF10DEA91EB5568B7EB3B4BA3926F6AE5A68A298
08D5DC4720943181120F6135EB07E9A45DE9D3E6AAA83C8D3A5B3992EE8F2D05
378A4D35AB1F6370B47D01877CDEDFD7B2AAEFF833592BA414F3A47823BF6D13
05BB5BC38C8BE33BC6930B7A2B598D4CE79938F7A96A3F497A83F6DB6221903A
0EBC448460DCC217F686B93BA05156E0F8F8EF16D8D47547EE84789ACC81DC79
F24F704AF34F8527C4BB88D26A1853D11955744518FBEB379A098C676090B003
0C8E199E7F3C96AEA7A15EC57AEB19362507DA3B890E36B1FCB3AF130CFFE47A
4A9FE814CBB28B25C3464B0A00D99DD32066CE6B223A168C24965764A2A31DC0
C5C719DD0C9B60A260EC39141FE77BED011A2F930025B4B6C5815DD78713063D
D6725D1A6999BC2D598EFD095ACEAA00D8D72A0B55D9D2ED462E6BB6BB11A22C
F7270811EC6924C12758D2771A77E918632CEEF994350F15430849EE540B2571
05FDE4FE7293C94323113B3A647445135DCFA640BD972CA9C0ED26E810E86035
69E222E65A59FDAFE1BE941222299CC387D1F77A8F5A83734E3D849F124D673D
7FCD62D628003910CC40054C88F369FA8E9D49594BBB68F501488E5B40EC27FE
3434D9D30B233D18BBAEC2E14406E86ACF4F67785A2C5DF1F7C69CA8D3CCED06
10F8AC0BF445600B383F5479D577AE7215A680DA2331801EE39B3FDC66B47C42
8911414CF430DD825BE27C0782597851BD465E5F58E46B51B658FBC4D8116DBA
4F95FDA09ADF18C4D00E2B7EED957CB6844A2DA9B5619DA47DEE8CEE26DD16A0
AB0E5F4A397363EF4DF5ACE412EACD3AA443FE5338A23961008AADF988D62724
A8A3815380CF5D589B6D4B3E12CF78C018D61E10A3F3D6484A21AED38B78ECBD
85F9B83094A863114E2F2D989CA681169BD223D96F46805A26520ADDF1517A88
7F7752505BF1433ADC585B1B0942EC4FCA42299CA88F5053D1E780C08854ADEE
7D2BE2D01ADB6767F61EAA6F6592D3067D808428881E45BA54BA84E8354AF033
DFB3D0F645365C6F284FFC1495FA97C85D4D0418D430245B1E04169A13E990D5
F09619B5B5D9AB326FC0C59E59801919EF450CA55C58A8109603B92CB6EE1432
79953D787B0E8D038ECE2AABA67E0E6EF55188394C55E85B24C56B9D34D9E052
1781C3135D7A92E03412ACDF4F891C416326FA4795F4A7FD823B1C8DF3E2EFA4
EC0AB02DE565D80C440A9126478781F6446E2AB47E85AB7BD5712F01C2240A25
E52070F6EDA8FF9649C56D4909D532475697F8133FB441D9EB02B5DF97E577F1
4CA0360537D6153150983627994DC746AAA127EA2147D02957A84E301DDA0674
7FB8E940BED61F9E852B4D0FD0955A4E28F2BCAB92593DB08E8B9C7D0B938739
BB3B373AE9144CFBF332E877AAFFF11CFE2FD21D7C99BD37091892CD6CF042A2
0A5C396148E44CC7DF4E1CD088D7DCBCE56D614686C1B27DEE3F6E51BD2CF3FB
88AA328A52E846C5394220B671D0E867ADE05BBADF9E6281D960A2ABC899BF95
53E77DB1C18158241E3F8FC886C7B94C3891A658D81C1B92264672BA38396ED2
3C449176933CD27F10B32D37CD2D33CEE1D4BBA30B5496AE9C19134BFD48350B
1AB580035F0BD69062C151224CC37AC20CC6EEF3E88DDD9E6BA355CD5C825565
DE511E61D78C5DFAC107DC39C74458C501117245C70475A51C4BCDA9A69A0404
8C77D91ADBB8FEF5B9EBD81C6E3CD51A2E54F13C4A1C36F18E76FCC03A55B147
3C6CFFC2B00048376FB754A2C58CA98D0096274964627BEEF3841D529852E4F1
363125935B64D07A8C50E86E531E434F815762A36730E4071E169FC8BC265310
A3AFC2964498CBF604B201E4B38529D5B3CB0D1BCE6EDA9B918B6C8EBD597BFB
73ABFD19E8B006AFF5202A2334A46020CDB989F2AA50E06E35A8259B43CD99CE
7D592FFAC780CA6B17CFA6BA76E73B637B370884E183FEF772140AA95D6257D4
F677BF8D1A50C9A21A6DEBB14B27E048D830D34EE37FFD5540FF7EE6C605F66E
4BF497A1146E51CA4CC8DBFD85065BCCDD09739BF846063E971C3E5BB5BFB530
69E363A5E6360AF4BEEAF8F8B67C23343BA4957EEB42E769824703A694762EA8
3EB004086D550EB847976E71FA9FF5CB1C5021647347AC0E56BDC74F9917689E
628C0B92CE278D548B2E4C31CDB18BBC4F993F5C3ECE21F87AFB14670E61FB21
9AE84A9F06143C2264A16E1F9CBC7B0E59DD943581C2A40836A5A23411763CE2
75D04723BF036CBE36533FE4A0FCE7CE2CDE3063432E2756A68F6D6EE0A242CB
450637F9BF06F895CA4F8CE99E4562C47519DAAC41D8BA5A2AF0C2A05A07782C
82BE74A054392BFA013D0D7379002FF9B1CFA0EEDE4A221580F66A13E8767C73
9440630C06028C81E98EFB729398C29ADE8F644FBD4C5B39F0B4039ADEDB1D3D
69C5C89D3C46A4AD65C0E924FDFD477F39EB2B0FFEE1F698B93A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NimbusSansL 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 398 317 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
6.47656 0.664062 3967.04344 3166.155938 re
W
7.485 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
485.516 3073.26 m
915.902 3073.26 l
915.902 719.227 l
1346.29 719.227 l
S
485.516 3073.26 m
915.902 3073.26 l
915.902 2384.64 l
1346.29 2384.64 l
S
/DeviceRGB {} CS
[1 0.6465 0] SC
1346.29 2384.64 m
1991.6 753.035 l
S
/DeviceRGB {} cs
[1 0.6465 0] sc
2004.97 719.227 m
2001.81 798.473 l
1985.64 778.281 l
1978.68 775.527 l
1953.07 779.199 l
2004.97 719.227 l
f
/DeviceRGB {} CS
[0 0 1] SC
2124.73 2384.64 m
2289.4 2384.64 l
2289.4 2380.89 l
2454.07 2380.89 l
S
3007.96 2377.15 m
3180.11 2377.15 l
3180.11 2373.41 l
3352.27 2373.41 l
S
/DeviceRGB {} CS
[1 0.6465 0] SC
3352.27 2373.41 m
2027.93 747.414 l
S
2004.97 719.227 m
2072.56 760.719 l
2047.04 764.953 l
2041.24 769.68 l
2031.93 793.816 l
2004.97 719.227 l
f
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.03164 306.255] Tm
0 0 Td
/F8_0 7.485 Tf
(object)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
Q
2 J
0 j
/DeviceRGB {} CS
[0 0 1] SC
11.9336 2984.19 378.742 178.141 re
S
/DeviceRGB {} CS
[0 0 0] SC
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 140.899 306.255] Tm
0 0 Td
/F8_0 7.485 Tf
(Deck)
[4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -22.9039 Td
(__init__)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -35.6285 Td
(__str__)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -48.3531 Td
(add_card)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -61.0777 Td
(move_cards)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -73.8023 Td
(pop_card)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -86.5269 Td
(remove_card)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -99.2515 Td
(shuffle)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -111.9761 Td
(sort)
[4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -137.4253 Td
(cards)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
Q
/DeviceRGB {} CS
[0 0 1] SC
1352.1 1606.95 678.141 1555.38 re
S
0 J
1 j
1352.1 2975.2 m
2030.24 2975.2 l
S
1352.1 1830 m
2030.24 1830 l
S
/DeviceRGB {} CS
[0 0 0] SC
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 251.677 248.621] Tm
0 0 Td
/F8_0 7.485 Tf
(Hand)
[4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -22.9043 Td
(__init__)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
Q
2 J
0 j
/DeviceRGB {} CS
[0 0 1] SC
2459.88 2175.8 453.59 410.18 re
S
0 J
1 j
2459.88 2398.86 m
2913.47 2398.86 l
S
/DeviceRGB {} CS
[0 0 0] SC
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 341.497 273.321] Tm
0 0 Td
/F8_0 7.485 Tf
(PokerHand)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -22.9039 Td
(has_flush)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -35.6285 Td
(suit_hist)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -61.0773 Td
(cards)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -73.8019 Td
(label)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
Q
2 J
0 j
/DeviceRGB {} CS
[0 0 1] SC
3358.08 1913.83 603.289 919.156 re
S
0 J
1 j
3358.08 2645.86 m
3961.37 2645.86 l
S
3358.08 2264.13 m
3961.37 2264.13 l
S
2926.2 2380.89 m
2989.82 2317.27 l
2989.82 2444.52 l
2926.2 2380.89 l
S
2042.97 2384.64 m
2106.59 2321.02 l
2106.59 2448.26 l
2042.97 2384.64 l
S
/DeviceRGB {} CS
[0 0 0] SC
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 140.899 133.352] Tm
0 0 Td
/F8_0 7.485 Tf
(Card)
[4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -22.9039 Td
(__cmp__)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -35.6285 Td
(__init__)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -48.3531 Td
(__str__)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -73.8019 Td
(rank_names)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -86.5265 Td
(suit_names)
[4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -111.9753 Td
(rank)
[4.491
0
4.491
0
4.491
0
4.491
0] Tj
0 -124.6999 Td
(suit)
[4.491
0
4.491
0
4.491
0
4.491
0] Tj
Q
2 J
0 j
/DeviceRGB {} CS
[0 0 1] SC
1352.1 5.15625 648.203 1428.14 re
S
0 J
1 j
1352.1 1246.17 m
2000.3 1246.17 l
S
1352.1 737.188 m
2000.3 737.188 l
S
1352.1 355.453 m
2000.3 355.453 l
S
403.398 3073.26 m
467.023 3009.64 l
467.023 3136.88 l
403.398 3073.26 l
S
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NimbusSansL
%%EOF
