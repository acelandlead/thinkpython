%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 139 73
%%HiResBoundingBox: 0 0 139 73
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font YWEKBM+Helvetica
%!FontType1-1.0: YWEKBM+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /YWEKBM+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 53 /five put
dup 57 /nine put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F872B092288AB4E433417193564C10FF9F9378064D49B1A2A5D9E9B
E835700215BFF97FEDD1A467992222571F1844860296640B1C2A73FC726262E7
5458325B2F5D5A226FE6A47A6C35890BC79295A0D8749A386550B06FEF7C5293
2888A149A7549AA247705219403D3277F3211C86407FB645C11AE23B61A759C7
4EE413D6535BB0FE6CC04B8127A7B22A23F2F6C01FA364C49E6C85F31B83BC08
AD24FF4CE933668CF392C4BFAF3930645B86402D77F7FAFEC9A202FC72122933
8682E75AC8528214804767DD3A541D730B03795CCC720859F6FB63299A924D52
A44E7FF3770E1428C46DA97D77EB6336F2A7E16A27CF794C2F358F85F592EE67
3A6AD62AD3CEFEA059DE61293F46998AC96A65F1035AA0A3809552DB4B00C7EB
B8D2AE50A44DE47988FC31D94006D11C55CACA89C0F89AFBF5221893272BB8FB
BF6A783836F69B9059F146847C512227356A75A8AC9743F53DA653523794BC8A
5FDECE6EB53B36798B13A29C66AE9CC6B9306709810D34A4C371A71BEFC83C99
C93A998DE3266E640439C8EE11C8AAFDB1BBC736A19C00224F8D8C4245AD8AEB
0087067D49D9934196B7EAC9CC29F4A3B50528ECBDAD926B333FAB65EA502F6D
B11005945834B13121FA08C0DFD9715420B5602C160F9899A0106D7B7242F64D
F62045A8C4DF7BABA6546A4AAB342E81C7B40E02B90EEED7C7D99AA329F6A691
43C52B44CCCCE7646D25BC66470D5E2C913027FE52E0E5A8D6361271EA347DD7
A5C3EFFE58B08BA89F91ECBFDF396BC57C5F5E7C207BF9C8CDC9778FA5EABF02
54B2CB80A50605EE491AC18F0C04D422953B1D181DB4E685C9FA2B480DC4E3CB
12BFC8E9105E8A2241485CA49988A075CBDB9FF010590DF027EB898B6849EFF0
81B0F1753F9451C917BAF45196108D1B4FB9FF1E75A6F4C1B90A3CB3FA88C50E
B7834B0DECA8362FE93664F5664A7873250481CE5517113C5F94E7D2B3FEFC9A
3F8F2B36D76C0ECA7700DCC903E99644287954942D4FA89DC87BA6B3B7A70159
F1E37EA8DEAA31833D7AC63BECBD1663AD8E2CC7DCB3DEE4E613369D11EEAD90
057A3FDFD286F54803843207E9FA58BBB4F56DE350727278B61B66AD6F4F5A7D
8776F9EB6BD6E865EC5EA1350B9D319C6800733AC4B80A406FEDC09B90DDA5E0
52D0380E40E68D0649CFBC292493138FDAE04E9269DF1A795B18937426AB2418
FCB98F7BEF0923A274F0F90D59D0BC4BC68511F4DBA9EE0AC1EDBDAF2A964F5E
8091DDD67AB3A55EA822BEAE0BCF416A5120D89F014B9DF5105A6F689CF5A3C2
C47A2DECC9F32B5C1F3CBEC3A5A2C498D62071D74CCC612A4CCFAFF2DB4D411A
1C9649FADC207720FA99CDC555DB724C165FA1F3D89EC1FB4AECF6919E81DEB0
0CCAA6A5B754D1D1E776F59A61945620F03FA1B748BF718B775C02318503D2E7
31327FD618A77C6A95DB4B4450E6C95590F7D4F3892B39B150D838368B2014F5
A19860B7CA8F8B996E470C84482555AA6898C4992ECDBA0A8BBF1CD1E0D5E045
902B7A55AD4899F19D0224FC37FD4D4234CEC2A1F49DBAE44E2434AEA5E7E4D1
777B1E5A8E57C05DE8B23C09415C0E918AC615B92E7964365152561B77AF5D66
4036A8670AF0F19616EE3401CADD4A829900506656D5289D539D8C712EFA0879
7C3514282CDE6F27FEDE2590F9D8CA6B5E241E6A95E350ECE2C5E39BAC373EEE
17F909D2A87B2A94809080DA58C9C32F4157AC9EB359CA831CBD774E5631EE4C
237AA5CE25F9575F6B58E031A9D73F006B39471C80C6C04774A1B1555A49B941
854EC666DF5EB0B378475A53572E1769440D11CCE45D7FEE7CC4B0733F3D1E0F
9A544BC706209BC737BBF679A3AB569EA6C239F68AB0F1E43158EA386D73EBB7
678F96ED4F9F818923D7AF97EEBCB5F7991B2D4FDD0FF75D8E53AF7335E831FD
1C18C1F862311A034ACA20C28CD6CA28B7C57D3C3AA213EFA8B070222919E35E
DB29BFDBB8D8D09C2F4481E3851825B5EE090620D36A00C1385BDD8B58D736D6
D85FC0D1D165B182825AB807C606D25E2F0EA1E5D98A542EBB6CEB3C608C4600
54D3992C86C5BF4BC9051DCCBB7FC741A97A5306D3813F9E602B0FA289136646
5582F16DC6028239E3AC34D124F574621D0024E6276593F70E2C5871F8C14480
37E9297DDA952C2E46237E37D858506D3A3392723EB3DF54035EBC8ADDA94009
5043BA0C5147921FAB6E4E7DD111BDD2B8CA64EABC9B9746B63CFC860DD7F290
5210D394A4C25CB9FFD5A2C27A43E18886FAC0EDDC38E8E82B3F23F4EDF4A6FC
2266E093739446942DC021508E2B730BEB89BFD691D56D0857FC2BF0BDA7024A
CA6A81E5D81099B1CD2928B5A2000A79E94F2593C3B1CC68A2871CD6C9E78BB2
4244F0582D550C04F92610B0100E23CB307F6AAFA62D65B19352BAA34B25A3A1
A6731966ADBAC4131B9C8035601C77F2CEEA48F7DD441A82FB69B801CAFD4EBE
3DFAF68A16BAD72760F7D1008D2172BA204B0E973323662C4C68999C8915297D
70D38405525154AFF81AC70F28C9B5356422A767A3842737F493D802AB19585E
1FA00C0AFF0B98E92AC939B939FC9CD8B8276105FDADD3097C0F94F756F8AB8F
BC820F3FAC0720F33271DD98E662945D8E3FA30638F6BB793232BDF805
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /YWEKBM+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 139 73 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
482 7 900 585 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
482 7 900 585 re
S
q
0 730 m
0 0 l
1390 0 l
1390 730 l
0 730 l
h
1074.8 290.801 m
1166 290.801 l
1166 326.801 l
1074.8 326.801 l
1074.8 326.801 l
1146.8 308.801 l
1074.8 290.801 l
h
W*
932 308.801 m
1157 308.801 l
S
Q
1074.8 290.801 m
1146.8 308.801 l
1074.8 326.801 l
S
q
0 730 m
0 0 l
1390 0 l
1390 730 l
0 730 l
h
1070 110.801 m
1161.2 110.801 l
1161.2 146.801 l
1070 146.801 l
1070 146.801 l
1142 128.801 l
1070 110.801 l
h
W*
932 128.801 m
1152.2 128.801 l
S
Q
1070 110.801 m
1142 128.801 l
1070 146.801 l
S
q
0 730 m
0 0 l
1390 0 l
1390 730 l
0 730 l
h
1074.8 470.801 m
1166 470.801 l
1166 506.801 l
1074.8 506.801 l
1074.8 506.801 l
1146.8 488.801 l
1074.8 470.801 l
h
W*
932 488.801 m
1157 488.801 l
S
Q
1074.8 470.801 m
1146.8 488.801 l
1074.8 506.801 l
S
q
0 730 m
0 0 l
1390 0 l
1390 730 l
0 730 l
h
392 470.801 m
483.199 470.801 l
483.199 506.801 l
392 506.801 l
392 506.801 l
464 488.801 l
392 470.801 l
h
W*
243.199 488.801 m
474.199 488.801 l
S
Q
392 470.801 m
464 488.801 l
392 506.801 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 120.2 27.7] Tm
0 0 Td
/F8_0 10.9998 Tf
(59)
[6.115889
0
6.115889
0] Tj
0 -18 Td
(30)
[6.115889
0
6.115889
0] Tj
-53.5098 18 Td
(hour)
[6.115889
0
6.115889
0
6.115889
0
3.662933
0] Tj
-64.509 0 Td
(minute)
[9.162833
0
2.441956
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0] Tj
-66.96173 -18 Td
(second)
[5.4999
0
6.115889
0
5.4999
0
6.115889
0
6.115889
0
6.115889
0] Tj
-0.00003 18 Td
(11)
[6.115889
0
6.115889
0] Tj
-72.00003 36 Td
(Time)
[6.720878
0
2.441956
0
9.162833
0
6.115889
0] Tj
-119.77773 18 Td
(time)
[3.057944
0
2.441956
0
9.162833
0
6.115889
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font YWEKBM+Helvetica
%%EOF
