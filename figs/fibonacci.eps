%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 308 218
%%HiResBoundingBox: 0 0 308 218
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font ERLTCB+Helvetica
%!FontType1-1.0: ERLTCB+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /ERLTCB+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 535 732] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 111 /o put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F8DC2AAF44657E5FD9F43D0D1A38525708E7B781AEDB8B97F28108D
9E359276406CB29606E08750E4FC6F693A75134256CACCF66D696A120E6AD9D5
5AABDD5ADAA157200CED1530E6195CE8E8DD3E701BAEA7799F2A8FB6C1054489
B6BFDBB1A00167DC019CBC69564E0B9341B7138DF12584624C6B97931B1BDF59
DED94DB6F03339D9BD3021BA34241852595AC5BA01B0A021C58B288B5F5E8D1D
8E5A024BE7971E1123EF16B7EC86A4F0C71D16C6A8A120DF3C8774BEB3E30C3B
FBB56C3F90D78F9E8840B8D15171EF865B8CAA62971659733030BDECBD4237B6
62B1F3FA616B7153C98BDD08C2150AF9963B3326AAB5B2275438C1019EB70761
3DB6595A8D95269FC63989C49094DA35641A9A13C7DF03359F782B24E4A3FBC7
E7C722571B417EA1AA5F4F5E0DCA800FB58201BDF789C7FC428855D30C85ACA8
0F1A07243343D7C9F0700B55672A6FB8376D973B0FE785E35CAA9BF8322846AE
708CD23D689BD2334D32A9F73117B7794AAA63E34DE67A3A629A980725B902B9
F83EC354DFC48E9D9D765DB5BF3CA56BAF6D1F240D0DBAF1EBE4C595CF3864D4
3139CC16C11D2CFFA9A4CB22C213B09C04BE2AA2671852938EE37442540C4BD1
1C9718B3CC808B25299133CD5F10113951DBB1DD9E6A517C9CB346E45E4F3109
7C39C32D3CCEB9387008D6606F6396506C237AA0166CEDD593DE9B865188DBDE
EB0DD48E53A3B3C45034BD5E475D3671AA8BFA7661DC4662276F74457AE4CBBE
176E334F771033876056F2E77A787D73C2B9A2B49E07491D646C6FCFB92638C7
770915924D32F469BA32B68648D63837B15E31586D64785E306CAF0C12CD96C6
DFE6D52D17B993E5CC9B74BE0062F8FDEF488A5D180C7C3F0A8F965EC5428BC1
8FC985F5379A0CA52482D2106CF41DB2C7D175A6C964FCF706DBAC4C16AB3DD7
85D607AD5E8E8FA4BB007BA32288808C6F41D14FC589F0FE0D35B85600B15A30
C6A5BAEE63F58A95C890C0B75283B84ACD6312B6127528F1D04A0A30B896CFA2
569DF028ADDC63247563B9C3C99C19A414E18309C434FE6167669A949A063A23
E61C189E42F06D111493A6162C5450C07DBA082C56021D3F5974C05B584503AF
6E4BAD188B8619BFEC49E6D823A366FDBE1FEFB737FE3CF5F4F7CE14E6FEEBC9
B73983AE42C1F39B9D6115E347DF3C7984944F68E9BD7F94C4536A5BEEA5DAFF
4B01BE7F40FC4A573B2566CD0D1BE2E0DF73B5C1D96989C74C5C74012A05D2FE
8A8109C0189B5F8653ECB0329A9A6BB3E18869A6C78B325DC474C6E1DB4AB86B
9426F7C05F519D2A39F54609C79BB373357332C5883038A3C080A170EF6F0DAB
A4C16323E0AC0003305313690EB80E7FEE24A88C160395E8ECDCAB9A8AF60478
2B95B9C8D6DE53D92CCB772B84425FA9FDC02950B714BF9FEB750C189EBC9FF5
4D56ADE9970964E03F9F2EDFD7010D704FC24363F272514697466314F1A427AD
9A2AF4A4CB3F36CE11D63118D49EF043F1135F5A7383625C02313F27D490F31B
029828DCDB50C06593F7CB388FA351387C037D3FC150FC72D9AF59356B6BCE6C
3851B314CA3229A4F8701D3A66C5E1576044936F41E543F2F371913ED068632F
FC5A825A98BBBBA5B668F0423C85D2BD06C899A829EF21BAD1BD4595AAC4CCE2
559A697D4CE782DBDF722AB953209E274A17203F7253061734FEF33F89772626
6762C9E8CA764FA99984939D0A7457353714460F8EB19979D3010DFE2E1DEFAA
7D05AE1D22D476A78F3663FE5C8FEF8D493968F065EC4161B8B04F8588ECC9D3
CCE3B8F3A4D6F1FAB0059EEF3A2AF940FAD98E70E11BFF7AC960C684E3362B28
50E568AF513D96BC6D63EEA7ABA441BE403B138164F7189B3E91D0947AB7B3E1
F4227135911D268DBD4641
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /ERLTCB+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 308 218 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
1447 1762 540 405 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
1447 1762 540 405 re
S
727 1177 540 405 re
f*
727 1177 540 405 re
S
2167 1177 540 405 re
f*
2167 1177 540 405 re
S
2527 592 540 405 re
f*
2527 592 540 405 re
S
1807 592 540 405 re
f*
1807 592 540 405 re
S
1087 592 540 405 re
f*
1087 592 540 405 re
S
367 592 540 405 re
f*
367 592 540 405 re
S
727 7 540 405 re
f*
727 7 540 405 re
S
7 7 540 405 re
f*
7 7 540 405 re
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
1742.8 1879.6 m
1834 1879.6 l
1834 1915.6 l
1742.8 1915.6 l
1742.8 1915.6 l
1814.8 1897.6 l
1742.8 1879.6 l
h
W*
1600 1897.6 m
1825 1897.6 l
S
Q
1742.8 1879.6 m
1814.8 1897.6 l
1742.8 1915.6 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
1312 1653.4 m
1247.8 1588.6 l
1273 1563.4 l
1337.8 1627.6 l
1337.8 1627.6 l
1274.2 1589.2 l
1312 1653.4 l
h
W*
1447 1762 m
1267 1582 l
S
Q
1312 1653.4 m
1274.2 1589.2 l
1337.8 1627.6 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
682 1068.4 m
617.801 1003.6 l
643 978.398 l
707.801 1042.6 l
707.801 1042.6 l
644.199 1004.2 l
682 1068.4 l
h
W*
817 1177 m
637 997 l
S
Q
682 1068.4 m
644.199 1004.2 l
707.801 1042.6 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
322 483.398 m
257.801 418.602 l
283 393.398 l
347.801 457.602 l
347.801 457.602 l
284.199 419.199 l
322 483.398 l
h
W*
457 592 m
277 412 l
S
Q
322 483.398 m
284.199 419.199 l
347.801 457.602 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
2122 1068.4 m
2057.8 1003.6 l
2083 978.398 l
2147.8 1042.6 l
2147.8 1042.6 l
2084.2 1004.2 l
2122 1068.4 l
h
W*
2257 1177 m
2077 997 l
S
Q
2122 1068.4 m
2084.2 1004.2 l
2147.8 1042.6 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
2095.6 1627.6 m
2160.4 1563.4 l
2185.6 1588.6 l
2121.4 1653.4 l
2121.4 1653.4 l
2159.8 1589.2 l
2095.6 1627.6 l
h
W*
1987 1762 m
2167 1582 l
S
Q
2095.6 1627.6 m
2159.8 1589.2 l
2121.4 1653.4 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
1285.6 1042.6 m
1350.4 978.398 l
1375.6 1003.6 l
1311.4 1068.4 l
1311.4 1068.4 l
1349.8 1004.2 l
1285.6 1042.6 l
h
W*
1177 1177 m
1357 997 l
S
Q
1285.6 1042.6 m
1349.8 1004.2 l
1311.4 1068.4 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
925.602 457.602 m
990.398 393.398 l
1015.6 418.602 l
951.398 483.398 l
951.398 483.398 l
989.801 419.199 l
925.602 457.602 l
h
W*
817 592 m
997 412 l
S
Q
925.602 457.602 m
989.801 419.199 l
951.398 483.398 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
2725.6 1042.6 m
2790.4 978.398 l
2815.6 1003.6 l
2751.4 1068.4 l
2751.4 1068.4 l
2789.8 1004.2 l
2725.6 1042.6 l
h
W*
2617 1177 m
2797 997 l
S
Q
2725.6 1042.6 m
2789.8 1004.2 l
2751.4 1068.4 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
1022.8 1294.6 m
1114 1294.6 l
1114 1330.6 l
1022.8 1330.6 l
1022.8 1330.6 l
1094.8 1312.6 l
1022.8 1294.6 l
h
W*
880 1312.6 m
1105 1312.6 l
S
Q
1022.8 1294.6 m
1094.8 1312.6 l
1022.8 1330.6 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
2462.8 1294.6 m
2554 1294.6 l
2554 1330.6 l
2462.8 1330.6 l
2462.8 1330.6 l
2534.8 1312.6 l
2462.8 1294.6 l
h
W*
2320 1312.6 m
2545 1312.6 l
S
Q
2462.8 1294.6 m
2534.8 1312.6 l
2462.8 1330.6 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
2822.8 709.602 m
2914 709.602 l
2914 745.602 l
2822.8 745.602 l
2822.8 745.602 l
2894.8 727.602 l
2822.8 709.602 l
h
W*
2680 727.602 m
2905 727.602 l
S
Q
2822.8 709.602 m
2894.8 727.602 l
2822.8 745.602 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
2102.8 709.602 m
2194 709.602 l
2194 745.602 l
2102.8 745.602 l
2102.8 745.602 l
2174.8 727.602 l
2102.8 709.602 l
h
W*
1960 727.602 m
2185 727.602 l
S
Q
2102.8 709.602 m
2174.8 727.602 l
2102.8 745.602 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
1382.8 709.602 m
1474 709.602 l
1474 745.602 l
1382.8 745.602 l
1382.8 745.602 l
1454.8 727.602 l
1382.8 709.602 l
h
W*
1240 727.602 m
1465 727.602 l
S
Q
1382.8 709.602 m
1454.8 727.602 l
1382.8 745.602 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
662.801 709.602 m
754 709.602 l
754 745.602 l
662.801 745.602 l
662.801 745.602 l
734.801 727.602 l
662.801 709.602 l
h
W*
520 727.602 m
745 727.602 l
S
Q
662.801 709.602 m
734.801 727.602 l
662.801 745.602 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
1022.8 124.602 m
1114 124.602 l
1114 160.602 l
1022.8 160.602 l
1022.8 160.602 l
1094.8 142.602 l
1022.8 124.602 l
h
W*
880 142.602 m
1105 142.602 l
S
Q
1022.8 124.602 m
1094.8 142.602 l
1022.8 160.602 l
S
q
0 2180 m
0 0 l
3080 0 l
3080 2180 l
0 2180 l
h
302.801 124.602 m
394 124.602 l
394 160.602 l
302.801 160.602 l
302.801 160.602 l
374.801 142.602 l
302.801 124.602 l
h
W*
160 142.602 m
385 142.602 l
S
Q
302.801 124.602 m
374.801 142.602 l
302.801 160.602 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 151 201.4] Tm
0 0 Td
/F8_0 10.9998 Tf
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
-1.61563 -14.8199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(4)
[6.115889
0] Tj
-72.00003 -58.5 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
-73.61566 -73.3199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(3)
[6.115889
0] Tj
72.00034 -58.5 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
70.38471 -73.3199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(2)
[6.115889
0] Tj
108.00031 -117 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
106.38468 -131.8199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(0)
[6.115889
0] Tj
36.00028 -117 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
34.38465 -131.8199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(1)
[6.115889
0] Tj
-35.99975 -117 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
-37.61538 -131.8199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(1)
[6.115889
0] Tj
-107.99978 -117 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
-109.61541 -131.8199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(2)
[6.115889
0] Tj
-71.99981 -175.5 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
-73.61544 -190.3199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(0)
[6.115889
0] Tj
-143.99984 -175.5 Td
(fibonacci)
[3.057944
0
2.441956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
5.4999
0
2.441956
0] Tj
-145.61547 -190.3199 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(1)
[6.115889
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font ERLTCB+Helvetica
%%EOF
