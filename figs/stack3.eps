%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 320 150
%%HiResBoundingBox: 0 0 320 150
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font GVTKVT+Helvetica
%!FontType1-1.0: GVTKVT+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /GVTKVT+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 762 732] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 60 /less put
dup 62 /greater put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C61B819D43039764D974E2CD27D64BA38F5D7B4D9986DE0A12DACDB
DB7CA8856A289F93EAF879683146091EF3A2B2DB829FD55941B91CEEDB1D5D0E
171C7C79D0E4F3B4C6F528F9CEC48C350A7766D5DF8688A73B41AC925C7DF361
3106C38F3BD30B833772570B6EDD2E27BC6D1FF3C745B28C34A38A286716650C
B49AE4F3095D5998A9E11BCB91FB13F628243CF21C9B2049AE82FE3D96868E1F
F2C90EF7E31251B75423CCF14429BB541556EDC3C47AF25FC913D3681D14A86F
05EC31D636A4CD06009EAB0520F56CF94DA14D12DBC3BE2CA7D7F5C4A66ABB9B
DEA34614A71C4A0EF10B4CDA827470F118D21EE693D2A399E91081FF156EBDE2
0678AF4019BD76F73213847C4896805C7B644B09FA5E339BDB499CAFCA1D730F
39A7D7D31A9F22DA89B4B634F0CF033B35B48D01917372FB7F4035235DC7CD89
E6D0AC41FDDE7F21067741EA697713586552B83B6324BE0F3AFC4763F205B561
3DA0D5C0565A3C4407FEF95DB3BAF69ACD6085A4BD66180B190332CBFBB486BB
64629D0F86DDD1FA7C4DC521A4A709329B625DC28FE72B65634CC18013C819A0
EAED4BC9E508A25D01C27033C22E2C93B085C926356C4446E824F8CA3870174A
F5E7D6A065464FA9F26E360754C8552F046C33E8A9E1365C66D0866C64405C94
A6D9524DC50C261AD4B1ECAE6EA9E5D4760A06E296349590940D146D63B329AD
4124037C44C2866AAB38A76A32F5B4DF8CA30127726215694F5FBF87EAD4CF18
8FBD65928F39C5244500BA35796E6B6FC7CB23FC0566EA9B0A761FB370391F8A
A50619F37F91F07A25DEC93FB038DA9BCC6E4DE7764CFCFBCEB2BBC0DF13BE22
0DBB7054DDA714B238D50FB2A5E2FC681F4A1D5E2697D7B8B2297B4FE1FD53AD
283B750327197C0FA75AB3D36B87AEC50E456AAB89D457B3BED04E89AD738720
13AB0ADCABE02F2242C69CC995A78D647B4FFC3996F885810B2895BA85268124
8C89DA58698558CD1CD74530D92DA4E74E0BCEAF6ECB8C99903FF41D41F8E56A
DDD4C61EE24B4097D5F529981EC31D9B560CDE8A73457CE956B13E6A93D4130A
3B3F00F5DD7C180A67AB32073352E0DBE12EAC95D2145ECA6A9534E9D67E550E
7D5FB24A7CDFA196098B995030BCAA469ABA059B9645950FE766DC82A015C09B
7BFF492A43DB2733730DFB6FF61693B3A800EBE11C271A8CF5B16B4E274C2958
794413F16035F4F5BD7A3DA83D7663C128B468004419874A8857B8763C67314D
56FA40F147B31B3E5C9EA3A3B3EEB222C93A6E5460BC2412515D8D11C5AFCE9C
9F71CCDD514D18C4E49677FA22DBC643C404DF7864389680B2364EE63BD4445A
71F74D7E5BB97372575C44338C4A1317C1B27C85F3EDC54CC1F6FF1BE8F63043
744F51A56921F0D5214BD3490B452BE0CD201644DAE6BDC35E1A230361BF1679
3D22A9437CD22DCD2229D66F81681DCE81623762A63F4B2A3C5E7626FCBF1716
F594BAB4D51C7A9C043814BF828964F55F62442649262F0E9A0F426F584E256B
538A053BAD8FD6A0E8AF3CF826A7E2482E4F811ABE745ABD6BDF446E35621047
BBE721365380655C4C7AAD46567F0919CAA007710CF615E80437246C661394F4
31E9D26BFD2C48BEDEF09065710351A63621E6A1851FDDF0F63C6962ED20D617
8806DDC191CEB8D32D23CF5CFA3F7EA506C53F1EDD97C27A6C4C29E2CA98A28D
DB046A71B216C3D7249445E9EC5529E57FC314033527AA8F1DC7F608443AB40D
B0421293F00E0E31A31999546E383FAD4277579A4EB7BF243958853E6AC38C5C
8BCFC368C7CD7DB94CB4D072635CB790941DD5758A712177959DA47B7B90ACD4
953BD27AFE46BEC5269461D5FFDAA79DD5C058F598F90DA6ED4B9F28BC806EBB
F3069644420AADDB3FDE1A697D86104603A400BCA2A79D0102CF4B31CD33FD53
00EE263C3C0FC1954D4E873EE872CBE4C1AD13E4A5497BDFFE3098978BBDE2F0
17CD36D5EBC035A09C30D58C2EAAD64D40AB39037E02E9DD61FCDF25D1E96D2E
5402868C81F47BDECED82340DD37D30724A1A3BF899A3B1F811635F93DA2D651
3AA7DAE1D680714091D17AF5DF8994024CE3C03D70428D7FC3E2579869C447A4
2191FAF3F21128CF61332E25A7918AF0B4D062C0BA6966EEFD87A4494E40F8D7
DED497C2EB5398D0183FC3CA5E4258BAE00A67ACDB3B4F6889BBA4C4075E545D
57D3688C4127EB4140AD8EDCD44694F0F3F845240745847B2B2E68A450473D52
B9FE0FB886272FCD6610452C325FA291B666251D5D9750C9872C8FFE21C1F487
6B37DE202792C0FDBE48BCC64A8900EDBDC567F473EB3466C6B8986F2B98AA26
2F3D23B4309E18AFBD2BFF9234132ECA05F02593FADFDAC58A258C7B123FA0C5
CA0C7A8EC7A95BD74986F1EADB64355990B60296D27BD148359BC32ED2600A2E
A8D62FD62309EB87CA1E2451EB0C5E46800D431B5069AE05846BF25D101919BB
9D212C72FC810DCF1A91C8396CBD5B1D9D3DAB76A202401B0D3B1D4AA39583B7
A29394ADB09250CC11D5363BC7978FB4A84EFF68C3DF970A2299ED709273B157
9D1348790B0E7684E1D5F10B00EE9224A4BAF132384841D5630698550425F2F2
FF7A0C9A88A58454C9A449FA83ACB08AF90A66DBB0655FAF72F8C94D0399EAB6
316715D5DBA81936778A93EA65244052A7E3DEAB8EF1AC0F916C6EC444D51CE7
01160454CD25FFD179D193C2518A39F72396B23AEDA2C993AF11EC77B657314B
875082669F54B7A86DD24ADB9C723E6D4B942C1127212565B19B85A0C5794CC2
5436048949F5B5AD631C1D1021FB0F20356A4C22BAE90FFE8ABC3686DEED20E4
A98BBF4C4D3157EBDC8D9217952EC59E93099CE8C7EEAA99D49AA0A8DEC4CF14
84930E106104D2FEA26729574301AE38797A21F383FAE6A5233E8E6500CD7558
171C3331BE4677D1F5D8150F9A66002C4E37E84DD52CEDD41ED9B724D09B3E56
2CD93B50414D87AD378B7D0523536041FE0EC33A5C2343D7DD645BF1A70B6AF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /GVTKVT+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 320 150 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
598 952 2340 225 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
598 952 2340 225 re
S
598 637 2340 225 re
f*
598 637 2340 225 re
S
598 322 2340 225 re
f*
598 322 2340 225 re
S
598 7 2340 225 re
f*
598 7 2340 225 re
S
598 1267 2340 225 re
f*
598 1267 2340 225 re
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
965.801 1055.8 m
1057 1055.8 l
1057 1091.8 l
965.801 1091.8 l
965.801 1091.8 l
1037.8 1073.8 l
965.801 1055.8 l
h
W*
823 1073.8 m
1048 1073.8 l
S
Q
965.801 1055.8 m
1037.8 1073.8 l
965.801 1091.8 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
1865.8 1055.8 m
1957 1055.8 l
1957 1091.8 l
1865.8 1091.8 l
1865.8 1091.8 l
1937.8 1073.8 l
1865.8 1055.8 l
h
W*
1723 1073.8 m
1948 1073.8 l
S
Q
1865.8 1055.8 m
1937.8 1073.8 l
1865.8 1091.8 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
1865.8 740.801 m
1957 740.801 l
1957 776.801 l
1865.8 776.801 l
1865.8 776.801 l
1937.8 758.801 l
1865.8 740.801 l
h
W*
1723 758.801 m
1948 758.801 l
S
Q
1865.8 740.801 m
1937.8 758.801 l
1865.8 776.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
1865.8 425.801 m
1957 425.801 l
1957 461.801 l
1865.8 461.801 l
1865.8 461.801 l
1937.8 443.801 l
1865.8 425.801 l
h
W*
1723 443.801 m
1948 443.801 l
S
Q
1865.8 425.801 m
1937.8 443.801 l
1865.8 461.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
3021.4 404.801 m
2934.4 432.398 l
2923.6 397.602 l
3010.6 370.602 l
3010.6 370.602 l
2947.6 409 l
3021.4 404.801 l
h
W*
2938 142 m
3012.55 142 3073 202.445 3073 277 c
3073 351.555 3012.55 412 2938 412 c
S
Q
3021.4 404.801 m
2947.6 409 l
3010.6 370.602 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
3021.4 719.801 m
2934.4 747.398 l
2923.6 712.602 l
3010.6 685.602 l
3010.6 685.602 l
2947.6 724 l
3021.4 719.801 l
h
W*
2938 457 m
3012.55 457 3073 517.445 3073 592 c
3073 666.555 3012.55 727 2938 727 c
S
Q
3021.4 719.801 m
2947.6 724 l
3010.6 685.602 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
3021.4 1349.8 m
2934.4 1377.4 l
2923.6 1342.6 l
3010.6 1315.6 l
3010.6 1315.6 l
2947.6 1354 l
3021.4 1349.8 l
h
W*
2938 1087 m
3012.55 1087 3073 1147.45 3073 1222 c
3073 1296.55 3012.55 1357 2938 1357 c
S
Q
3021.4 1349.8 m
2947.6 1354 l
3010.6 1315.6 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
3021.4 1034.8 m
2934.4 1062.4 l
2923.6 1027.6 l
3010.6 1000.6 l
3010.6 1000.6 l
2947.6 1039 l
3021.4 1034.8 l
h
W*
2938 772 m
3012.55 772 3073 832.445 3073 907 c
3073 981.555 3012.55 1042 2938 1042 c
S
Q
3021.4 1034.8 m
2947.6 1039 l
3010.6 1000.6 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
965.801 740.801 m
1057 740.801 l
1057 776.801 l
965.801 776.801 l
965.801 776.801 l
1037.8 758.801 l
965.801 740.801 l
h
W*
823 758.801 m
1048 758.801 l
S
Q
965.801 740.801 m
1037.8 758.801 l
965.801 776.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
965.801 425.801 m
1057 425.801 l
1057 461.801 l
965.801 461.801 l
965.801 461.801 l
1037.8 443.801 l
965.801 425.801 l
h
W*
823 443.801 m
1048 443.801 l
S
Q
965.801 425.801 m
1037.8 443.801 l
965.801 461.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
965.801 110.801 m
1057 110.801 l
1057 146.801 l
965.801 146.801 l
965.801 146.801 l
1037.8 128.801 l
965.801 110.801 l
h
W*
823 128.801 m
1048 128.801 l
S
Q
965.801 110.801 m
1037.8 128.801 l
965.801 146.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
2675.8 425.801 m
2767 425.801 l
2767 461.801 l
2675.8 461.801 l
2675.8 461.801 l
2747.8 443.801 l
2675.8 425.801 l
h
W*
2533 443.801 m
2758 443.801 l
S
Q
2675.8 425.801 m
2747.8 443.801 l
2675.8 461.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
2675.8 740.801 m
2767 740.801 l
2767 776.801 l
2675.8 776.801 l
2675.8 776.801 l
2747.8 758.801 l
2675.8 740.801 l
h
W*
2533 758.801 m
2758 758.801 l
S
Q
2675.8 740.801 m
2747.8 758.801 l
2675.8 776.801 l
S
q
0 1500 m
0 0 l
3200 0 l
3200 1500 l
0 1500 l
h
2675.8 1055.8 m
2767 1055.8 l
2767 1091.8 l
2675.8 1091.8 l
2675.8 1091.8 l
2747.8 1073.8 l
2675.8 1055.8 l
h
W*
2533 1073.8 m
2758 1073.8 l
S
Q
2675.8 1055.8 m
2747.8 1073.8 l
2675.8 1091.8 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 71.6844 104.2] Tm
0 0 Td
/F8_0 10.9998 Tf
(n)
[6.115889
0] Tj
-2863.66 TJm
(3)
[6.115889
0] Tj
-1428.41 TJm
(recurse)
[3.662933
0
6.115889
0
5.4999
0
6.115889
0
3.662933
0
5.4999
0
6.115889
0] Tj
-2863.56 TJm
(2)
[6.115889
0] Tj
59.4438 -31.5 Td
(recurse)
[3.662933
0
6.115889
0
5.4999
0
6.115889
0
3.662933
0
5.4999
0
6.115889
0] Tj
-2863.56 TJm
(1)
[6.115889
0] Tj
59.4438 -63 Td
(recurse)
[3.662933
0
6.115889
0
5.4999
0
6.115889
0
3.662933
0
5.4999
0
6.115889
0] Tj
-2863.56 TJm
(1)
[6.115889
0] Tj
-69.7992 31.5 Td
(<module>)
[6.423883
0
9.162833
0
6.115889
0
6.115889
0
6.115889
0
2.441956
0
6.115889
0
6.423883
0] Tj
-59.3933 0 Td
(factorial)
[3.057944
0
6.115889
0
5.4999
0
3.057944
0
6.115889
0
3.662933
0
2.441956
0
6.115889
0
2.441956
0] Tj
-0.0003 -31.5 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(2)
[6.115889
0] Tj
-0.0003 -63 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(1)
[6.115889
0] Tj
-0.0003 -94.5 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(0)
[6.115889
0] Tj
-59.3933 -31.5 Td
(factorial)
[3.057944
0
6.115889
0
5.4999
0
3.057944
0
6.115889
0
3.662933
0
2.441956
0
6.115889
0
2.441956
0] Tj
-59.3933 -63 Td
(factorial)
[3.057944
0
6.115889
0
5.4999
0
3.057944
0
6.115889
0
3.662933
0
2.441956
0
6.115889
0
2.441956
0] Tj
-59.3933 -94.5 Td
(factorial)
[3.057944
0
6.115889
0
5.4999
0
3.057944
0
6.115889
0
3.662933
0
2.441956
0
6.115889
0
2.441956
0] Tj
240.1157 -81 Td
(1)
[6.115889
0] Tj
240.1157 -49.5 Td
(1)
[6.115889
0] Tj
240.1157 -18 Td
(2)
[6.115889
0] Tj
240.1157 13.5 Td
(6)
[6.115889
0] Tj
208.6157 -63 Td
(1)
[6.115889
0] Tj
150.2223 -63 Td
(result)
[3.662933
0
6.115889
0
5.4999
0
6.115889
0
2.441956
0
3.057944
0] Tj
208.6157 -31.5 Td
(2)
[6.115889
0] Tj
208.6157 0 Td
(6)
[6.115889
0] Tj
150.2223 0 Td
(result)
[3.662933
0
6.115889
0
5.4999
0
6.115889
0
2.441956
0
3.057944
0] Tj
150.2223 -31.5 Td
(result)
[3.662933
0
6.115889
0
5.4999
0
6.115889
0
2.441956
0
3.057944
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font GVTKVT+Helvetica
%%EOF
