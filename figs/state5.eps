%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 317 136
%%HiResBoundingBox: 0 0 317 136
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NBKYPT+Helvetica
%!FontType1-1.0: NBKYPT+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NBKYPT+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 535 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F872B092288AB4E433417193564C10FF9F9378064D49B1A2A5D9E9B
E835700215BFF97FEDD1A467992222571F1844860296640B1C2A73FC726262E7
5458325B2F5D5A226FE6A47A6C35890BC79295A0D8749A386550B06FEF7C5293
2888A149A7549AA247705219403D3277F3211C86407FB645C11AE23B61A759C7
4EE413D6535BB0FE6CC04B8127A7B22A23F2F6C01FA364C49E6C85F31B83BC08
AD24FF4CE933668CF392C4BFAF3930645B86402D77F7FAFEC9A202FC72122933
8682E75AC8528214804767DD3A541D730B03795CCC720859F6FB614C8B02B284
71B6D7EEB5F89C5740804B65502285E0826380E6117B67EF467BB0C06D363486
E5C1FBC3727CE3C0BA7D5FFC98DE494A3BEFD5F33B0E6DFBA84DFA4FFA27A2FB
DDF0B2B807E98A6CC74FF8C9C46333B5E3418FC4D5217172BE224DBC65334AF3
37FCCF1D38C0BFE952F7E899AB764DEC74D4E12F088EB34CC59564CA0A11EB56
C9E3C8D2BECD9EECA3890B1700F7B5CA5DF8C66FCC4F22CA9FE54A2E606C5E1B
AF54E37D32AA281CA00E5DC1282E7686ABB14C6809E1579FE8CFAA95438A15F7
E916FEF0A291362D8BDD0B0EA3D5B68F90171FC4825B06FD9005A2D6B11A7FB5
8594BFC98B8E46704EBF49B2429E682459D7A1B3DCB70A685571C1BA94F63341
FDF7B29B4E76E9E215E86AEB5CC3D257056A97A2DE90A8E0E213CFDB2281389A
64831E607C54C2C1469ECB64E0860EBB28A61BC37208A6AC702038F729C17864
ECECF9C8CE5424AB0DA4F44F9EB3DD2516581B62C51B32461E711F1AF089E18C
CEA80F633B740E37FCD2CE7844D182A0D297AD3AB5C1F321871CA588031744C2
022D0FF3DE935299B3617E06D326D06E65FAC1F635CF10863DF167B03105B42C
61D4E40CC846D27B4482A87DD7FDF9CC6CACC4424E098DC4A75A879402A13C24
A8F303154EB04492E066A2E502462B7837BFC48015325F1EFAA0B076347A2DFD
2F79ED6346177B88506B5819F8F359F1D181CDE0DDCCCF06BCC53F1B02DB06BB
954C665CE36B3944FBAB0FCB70319346376AB99819B7294978EA09BF79F3E867
4A3821FC9EDFC88085181ED08A6272CE9ECEC03A3B7A6E4C9AFF2529B752D9F7
2598E64D3F69E3AFFC5AED800BFEF7CE0E97D8A8B3DC46924117D2F4DECD8325
2A4CB49A4B2A24D4121F5B65883ECC418EE28FA417062B63B2C1054B263F3AE6
13CB5258843EBEEC49042829C32733CF7B8DED4BCF536FFEF2604FC1EAFA866E
6CA6DDAC5D3338FAC3E99ECD6010F4542B049D1AA64A779D2AC313043E952660
DF9078DA81D701E471BB3906C59CB05E09971F6E1E973E5BEFB3248079C117BD
7563F5E345C829817399349C8A5D2A65279475BCA051417F47888D9D22B77AC0
DF7E6185D9B1B5988596C6C80C69AFB92139A9E5A682FA8FC869BCC09BED3E5C
868E20F678B58D2818644AA9B69E1608F39E4FC9D31C6745DC782FFD4E4EFD4E
757AE6C032C92B09F45B472925B8E56FB65CDF78864F0049763871DAB6E9B815
D946F16F207BD84953A3C722487229C0A61357190DA290FBE806A6079B281D9A
51EA88F453C69376D8618EEBDBF4B246D0722EC5072B672911278EDB216AE0F6
6769A71365AA21FADCDADBE9A2A494C7D729E8474CB17982EC01CB91F06EA28A
D1C7A0BF0F7CDD97BBED900B53F414AC953E20440A48C60040A9E579F9ED5206
957E041884670D6A94DF3B2EE4D6AB7779ADE0C612809EA793C7C375A40BD448
40EA0B20FF0253B50E7B117D622B7D6ADB156AEC721E979B0D82C8A3B5B8257A
423BE122783E029BE1661681E29B0C565D8E688384FA6DCB8E9CA4C725EF64EB
5892AB059D7B4455ECF546BFEF0AD3376AF34CDBD5D89F2AB308C2913ACAF682
232F2BF27A548E9E514148A659C21F35ADB889F83B3CE4BE4B3B4021AA480A3F
8D508EF5921340D7C2F0DC29016A8C0002966AC08116FA94BDBAA77097DF785A
D94E276CB65C535F3400966FAF9DA1A1FC8306F9BB3BBDB9334575AABFF61DE8
E5182F50CDD8A906B9BC9020BA33FFFAB35964B674ECB330DCD17B76281860D7
CE7CAD2A250A5331E117668850D831BFDA3D0145642152EA13735597800C3119
F68E16DA6F6AF3F13856B69BDE4DB255C7C685B4D5965192E6053C99B92A9902
36F4A56C44DBA5C0B342220808F5DACFAB7012E7E5E4AF98F2557D6DC793A389
B94C8993A6057F924411CE45B94B4933364EB83204C5B51F5045CFB014B623C8
DB29EB8A7BCFC76339BAB8FA711D0B0D16B010D5720AC2BC32EE8363FB9A4015
C0B580D636C10735DB2EBD48CDE9AADD5F403DAD68D3CE36CC6889992D09A2FA
42ED15BD21EF26AF444BA0232B760724DFAB25674C512CF4F4A8DAC856CAD223
608C4E2C75DC6EDF20931146FFB3783ABB70F779E38097ED8C6526863BBBBABF
94BFC8F8DDC9260D05F8AE7FD922980224566590F9EBB3015260B59A359FF738
DE043A014CC31833BCF18C55497CE8E6681159445C8727DAEF343E8DC20A8663
C100F75489A47E0841CA4C7D83674A27B08391D6D35CC827752AA2C13C8B4FDC
51AC1691B7A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NBKYPT+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 317 136 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
414 277 765 945 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
414 277 765 945 re
S
2349 457 810 765 re
f*
2349 457 810 765 re
S
1764 7 405 1215 re
f*
1764 7 405 1215 re
S
2349 7 810 225 re
f*
2349 7 810 225 re
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
826.801 920.801 m
918 920.801 l
918 956.801 l
826.801 956.801 l
826.801 956.801 l
898.801 938.801 l
826.801 920.801 l
h
W*
684 938.801 m
909 938.801 l
S
Q
826.801 920.801 m
898.801 938.801 l
826.801 956.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
826.801 1100.8 m
918 1100.8 l
918 1136.8 l
826.801 1136.8 l
826.801 1136.8 l
898.801 1118.8 l
826.801 1100.8 l
h
W*
684 1118.8 m
909 1118.8 l
S
Q
826.801 1100.8 m
898.801 1118.8 l
826.801 1136.8 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
331.801 1114 m
423 1114 l
423 1150 l
331.801 1150 l
331.801 1150 l
403.801 1132 l
331.801 1114 l
h
W*
189 1132 m
414 1132 l
S
Q
331.801 1114 m
403.801 1132 l
331.801 1150 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
826.801 560.801 m
918 560.801 l
918 596.801 l
826.801 596.801 l
826.801 596.801 l
898.801 578.801 l
826.801 560.801 l
h
W*
684 578.801 m
909 578.801 l
S
Q
826.801 560.801 m
898.801 578.801 l
826.801 596.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
826.801 380.801 m
918 380.801 l
918 416.801 l
826.801 416.801 l
826.801 416.801 l
898.801 398.801 l
826.801 380.801 l
h
W*
684 398.801 m
909 398.801 l
S
Q
826.801 380.801 m
898.801 398.801 l
826.801 416.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
826.801 740.801 m
918 740.801 l
918 776.801 l
826.801 776.801 l
826.801 776.801 l
898.801 758.801 l
826.801 740.801 l
h
W*
684 758.801 m
909 758.801 l
S
Q
826.801 740.801 m
898.801 758.801 l
826.801 776.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2761.8 920.801 m
2853 920.801 l
2853 956.801 l
2761.8 956.801 l
2761.8 956.801 l
2833.8 938.801 l
2761.8 920.801 l
h
W*
2619 938.801 m
2844 938.801 l
S
Q
2761.8 920.801 m
2833.8 938.801 l
2761.8 956.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2761.8 1100.8 m
2853 1100.8 l
2853 1136.8 l
2761.8 1136.8 l
2761.8 1136.8 l
2833.8 1118.8 l
2761.8 1100.8 l
h
W*
2619 1118.8 m
2844 1118.8 l
S
Q
2761.8 1100.8 m
2833.8 1118.8 l
2761.8 1136.8 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2761.8 740.801 m
2853 740.801 l
2853 776.801 l
2761.8 776.801 l
2761.8 776.801 l
2833.8 758.801 l
2761.8 740.801 l
h
W*
2619 758.801 m
2844 758.801 l
S
Q
2761.8 740.801 m
2833.8 758.801 l
2761.8 776.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2761.8 560.801 m
2853 560.801 l
2853 596.801 l
2761.8 596.801 l
2761.8 596.801 l
2833.8 578.801 l
2761.8 560.801 l
h
W*
2619 578.801 m
2844 578.801 l
S
Q
2761.8 560.801 m
2833.8 578.801 l
2761.8 596.801 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2266.8 1104.4 m
2358 1105.6 l
2357.4 1141.6 l
2266.2 1140.4 l
2266.2 1140.4 l
2338.8 1123 l
2266.8 1104.4 l
h
W*
2034 1118.8 m
2349 1123 l
S
Q
2266.8 1104.4 m
2338.8 1123 l
2266.2 1140.4 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
1681.8 1114 m
1773 1114 l
1773 1150 l
1681.8 1150 l
1681.8 1150 l
1753.8 1132 l
1681.8 1114 l
h
W*
1539 1132 m
1764 1132 l
S
Q
1681.8 1114 m
1753.8 1132 l
1681.8 1150 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2266.8 125.199 m
2358 126.398 l
2357.4 162.398 l
2266.2 161.199 l
2266.2 161.199 l
2338.8 143.801 l
2266.8 125.199 l
h
W*
2034 139.602 m
2349 143.801 l
S
Q
2266.8 125.199 m
2338.8 143.801 l
2266.2 161.199 l
S
q
0 1360 m
0 0 l
3170 0 l
3170 1360 l
0 1360 l
h
2761.8 110.801 m
2853 110.801 l
2853 146.801 l
2761.8 146.801 l
2761.8 146.801 l
2833.8 128.801 l
2761.8 110.801 l
h
W*
2619 128.801 m
2844 128.801 l
S
Q
2761.8 110.801 m
2833.8 128.801 l
2761.8 146.801 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 52.9227 108.7] Tm
0 0 Td
/F8_0 10.9998 Tf
('a')
[2.430956
0
6.115889
0
2.430956
0] Tj
-2863.65 TJm
(1)
[6.115889
0] Tj
42.4773 -18 Td
(1)
[6.115889
0] Tj
-11.5227 18 Td
(dict)
[6.115889
0
2.441956
0
5.4999
0
3.057944
0] Tj
-52.0227 0 Td
(hist)
[6.115889
0
2.441956
0
5.4999
0
3.057944
0] Tj
0 -18 Td
('p')
[2.430956
0
6.115889
0
2.430956
0] Tj
42.4773 -54 Td
(1)
[6.115889
0] Tj
0 -72 Td
('o')
[2.430956
0
6.115889
0
2.430956
0] Tj
-2863.65 TJm
(1)
[6.115889
0] Tj
2.45273 -36 Td
('r')
[2.430956
0
3.662933
0
2.430956
0] Tj
-2863.67 TJm
(2)
[6.115889
0] Tj
3.057808 -54 Td
('t')
[2.430956
0
3.057944
0
2.430956
0] Tj
198.361808 0 Td
(0)
[6.115889
0] Tj
198.361808 -18 Td
(1)
[6.115889
0] Tj
235.977408 0 Td
('a')
[2.430956
0
6.115889
0
2.430956
0] Tj
235.977408 -18 Td
('p')
[2.430956
0
6.115889
0
2.430956
0] Tj
181.977408 18 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
198.361808 -36 Td
(2)
[6.115889
0] Tj
-2863.66 TJm
('t')
[2.430956
0
3.057944
0
2.430956
0] Tj
235.977408 -54 Td
('o')
[2.430956
0
6.115889
0
2.430956
0] Tj
198.361808 -54 Td
(3)
[6.115889
0] Tj
139.861808 0 Td
(1)
[6.115889
0] Tj
123.477408 18 Td
(dict)
[6.115889
0
2.441956
0
5.4999
0
3.057944
0] Tj
82.977408 0 Td
(inv)
[2.441956
0
6.115889
0
5.4999
0] Tj
139.861808 -99 Td
(2)
[6.115889
0] Tj
-4762.28 TJm
(0)
[6.115889
0] Tj
181.977408 -81 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
235.977408 -99 Td
('r')
[2.430956
0
3.662933
0
2.430956
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NBKYPT+Helvetica
%%EOF
