%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 218 204
%%HiResBoundingBox: 0 0 218 204
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BRSQWT+Helvetica
%!FontType1-1.0: BRSQWT+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /BRSQWT+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C6B88B59A58E4CB2ACF74C330000AE47A6B584F6A311B1894604AE1
579CDAB99F014E12AA18DAE4204B234DA946AB76CC63C2D100A885B6113D3C41
E5EE100E7DDA2689968C1EB76EDA4A5C0B91987D7443FAF164BD6EF94858F91F
A2760B381969DF60343FC2149A7613FE8DA43086E2EF828336C652B8BB89FD72
63E3DCC4A5B2C97048DA1B0B2AB69AEBAA19A3B37D5EBB21922F62455523C698
B50D0300706A59441C4C9449A7AA29EA7E804696906291643E42A454767CFA18
939A5F0EE755E4B2697E03BA065B4B19DC33D16F6213F8CF5D942FAC91FC3DB6
6355C440442AF258EC79923F52B6E9680DD2B02403AAB02CB4650CE62E353832
52E6D467139C5643E81611C0C8DF41A581A724F6C7F1913FCFB4E1F3111CE5D1
667520E6DD90D1D8572534F890909F105C815DB3D5A9402A45A45D4A8899449D
5C42BAE8DC9B3D492BF7E2C9B2AA8CFB648B3D88888825BD8CF192049140B1E5
D708E0E19AA0D71F24270DF63D8F7EE35BEA74B573045D631A36E10D01F111CB
146EDA0554C786AF34BEB043DC2765DD44FC1A1FD6BA6AA5D06CD983509CDE9A
6979E352C7E04E9ACABB80EE6F0993A4A54C88EE2A3DFD84E5A405D5C300F4F2
294B12003ED656FD9ADBED93FF1B3954E6BC09206A2B8E9B7E095164D8BCFDD8
A671634C5E7AFAF460344BD77CB9E19DEEB8E9C90B2F18237E9EAD5970BEF74C
D740E9E79C60EDC1E586B4791F595D46823FDB6C4EA338EB1AB1F1A9CDF81481
52FA346BEDDC7466221353E60171B1A75E67AA9F2AD362D6E58BA49993FA1404
6661D0BF1CA16491A75CBC9A0565062FB6785F444882B839C70514A6B91B338B
35EC61D9C286257737A19A3D63B8CFF8EC24CDC7CF628F125F8151321954133C
E7E99ED19ECFF3799FB7CC0463648D616B639F2E44AFE2D172A2CBFD49526024
0F1FA9411B492D082E5B42A300420FE5EF6F222BC911148BE98ADDC801EED49D
C5C8E94C523CBBE9FE63B9A3132BE442604E5ACC3A1BF7CD111F0DF5F713038F
D130219A5BF75157ABD8B301F7E1FAD14D83076B57B493671D5D36825A3DBD2B
8553FBD5ADFE9C2B018DF74D2D376D7B5655D92EE9ABD7D86E56C3BF1454A159
2C13EB2A7A86608581F52ACA69020A17CCC312CCB083B4885E1C32E371CF0381
A0755D68A4EE53B643CF704F5EE4B7ACA3434E228103BCA23782D7748EC331BC
79F76A87D3A3FE971EBEC25132201C7217DD7920DE9E7DBB4CB10495D6FA066E
30D14574F34A3869447A90738FD63F09530A2DA2ADCDA8459944232C5C316A1C
0C58A784D1E2F5E9719D22D741220108AFC28E8CBABC59C1B408209863464DE2
7AD451BA5A79B00FB7CE101A9F79D835C615D544831B37135D88D8AB733DA7DA
34ECD8C4431C2F79B061888B4EC1528E86417EA5FF81613AB3C934E1FAE8E27D
3B31D0565AF119C19390951E0476E647AD4D2D931376029C6FB832E6AC800DD4
988AE6FC19BF9700C390B486DDCBF4F8EBD477A7C07499B3A698CFFE11AD0031
363E7936818AC564628F63FE76849F13E94EF7C466483D41DEC4B0DF29C8130B
F52654142CB0D0DA7E4CA58E8AAF415D37B48D5F46204FB0AFC4D63E68502924
278CB18EFDC8CB64F470F7F331D4D22CDF1E0382C17CF9A270757211408E978C
AB93A77592668F672100CB06122E15F1984262C13F4765E8DFFC92724EC515AA
95976103F0BB397A3A972F0D0EE9EC41615F20DE20D99D0C1D1FBE4B46C6D130
8E8E6780901C33D813BF777C2DF836B65916A596C1F7771DDD5D3794333A1DB4
27B69E1A310BCBA8500840C321FC1B2840BD163A3DCDC7F9E9491E24FAAA5D52
42B1882167BDC40B596F826009D557677C471E5D95F87D5579C6E069E75C2789
BA86A2AC93BFC0F28BEB62F943414EDD5DBB2BB61CB936DF0D91576AFBBDCF00
981793B34ECE7780AC074971C4B073294AEF9E061DD077637121710907FC44B0
FD27CAB89896B0F694B721DA16E23C115E78BB4072346E6C725B8D25755B6E55
57AB831C6ABD018950FB9B3B4BB1FB287236FDD3E9CAE8931CBF40C0AA26F002
FE7C7E447DED241E73C5845B0F83A0989CFC516764AF81CF06B65E03EDD75ABC
F8D9FDEE74F48A5E726BC4C2E7F59AFF1942AB5FC8C1BD6E6010ACDFE7536C17
8FCCA80C9E732AFE6D090E46E0E7FB1952A0DC6F548708B672DD13AB04F9E211
DD322C5C2806C1786B77138285E1BC459CC5FB8C24E7615B85B859996D39897C
6E7E81952FFE7A507226DE2E74B3BE457E726BEFC577CB79400DFE22C6383084
2E76A8927A6E03699E6EE8E4A424639189A80A372DFBCEA76DDFC9E6BBBF967A
D4657C1686DBE1822CA121D0A426807B8960092362C8725434F90FEA1ACFFDBE
B43AD2843C2C46A7D74488F07F2FF453A64663AD0511DB0511ACDEE3036E461C
95125FC2E077F4A12BFC1D6669D0FCC08F17DFA0C39BE253C39028C37A357992
98C063C0C232AEC056A1529DBD0646D627CA31D78ED1D19B490F87B09790CE12
454EA878DB5BB955ADC8A6876614DDD3BAE3219BF4593E79EB4C97111F9E763F
35D03873C5B8759E317E80D4AA6B46F7FB33E787CBA528099B137C4060DCB955
4EACCE76CE4AC69C264B9CF4976098F7FFE528028AF85390B262CAD2315B7FDD
0CD5BEF916C60488EC116D1A251E89CFDAB3AFA7CCA9EFFC217BB3916528F0C7
4A9F3FCA7B117E679BFC8B7BC0463BA1713D104988D05810D22FC737700390EA
CEDF3B8399C1ED3370208907BC2E71B832EECAA0164D8903E0A2347E49350100
219F648A62641A4434B5A4BC678B3ED50EE3CC09C17998A08F07B48820F5F2FC
7AB8BB7ADC0B7578FEA226BDC57FE78B2A21FA0FC0A3CC18AF83A6E9355101EF
C0EC999AF19DCB82F191E1BA47F4D6139C1381868D103AA16D6DDA2DF5A2C954
08C2848EFB322F60B245D9A7FBABFD2A0DDFFBBA34C5A1A7DE93443E565EB87F
1B57BE8F1112349F67F81A0A576ED4E3C2983A40C0CA6DEF07654D8F31462BD3
D402485FA9BB0CC624DD6EA4D9C57E4D248D1F4AD7C4C7720CE3DF04C4CF2681
5F49D9468697CE41756B567AA45EC7EB29271AEF2DE5AC40F5FBA7ECBF1CA4F0
814B57373965DE9CB82A2E262E9025956050F9DB028216EC6641FC0EAF8C36AD
A99B7C6993696263D4979F72AAD22C31A92629A972008C71474FE66D6D63D678
4D298300DF4C7DBFE12C20987FEDDF82790166C43C0918A466B31F5A85D5BF19
79D9F72FB7439D492B3DAC6C60D54EDFD2A8E387DE7560D235FB9AD3CAE78DC1
017B7CC6017399071D7A49B874A319465BFA6912ED60AA42FD345AB234B308B1
6A5A7C5D260DCDB09F132A0E6585BCC8E95E5D34F09AFF645E43077061378A45
7BBDE1A36F404F2E35A74C8FD99D58114C1A5BC2915D5C8255FE773DEC09F3CE
6F6C4D044D4B2714F6E6B009811C2232E5F98CC8ED713E89CF5F1DBB05A08CEA
3576A684DDEB0D3D9A89BB404E85B7CF4500BEABBC8D9C188E50921B1F1382D7
528DCCFB6F0601CA555890B0E1DEC8451CBEACE9CA6BB781F8B77341B862D464
3F1D44E1E67428925B35F9B5B363B8185FDEC7BA7DC8B8AC0A3263162CB33249
B22CF32E4EFBA4D2875C6BAC2B3C0C530ADB18F2FA19BACA61CD24ADBF1C3810
212C1594A5E803029D218FB2E5AED6E90574191041DD8A1218854AFA616788B7
1736E0B48DA72DD87B789E5593D639E157474CEED83B7EAE572D0DFCF7C7F1A4
A34718578A39468C357AC24B68864C7EFAAC86170CC7D2241E191202E7E11C3C
7C545C9D96BC065A56AB34E1E6F19F61FF1EB08C039A80D2181BCE05CC67B83E
74A02FEECF756838911C2722843749F2A6A310A122BDC6D158086A9C23D06854
17301513202076
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /BRSQWT+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 218 204 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
862 457 945 585 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
862 457 945 585 re
S
862 52 180 180 re
f*
862 52 180 180 re
S
862 1267 1215 585 re
f*
862 1267 1215 585 re
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
1274.8 920.801 m
1366 920.801 l
1366 956.801 l
1274.8 956.801 l
1274.8 956.801 l
1346.8 938.801 l
1274.8 920.801 l
h
W*
1132 938.801 m
1357 938.801 l
S
Q
1274.8 920.801 m
1346.8 938.801 l
1274.8 956.801 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
734.801 934 m
826 934 l
826 970 l
734.801 970 l
734.801 970 l
806.801 952 l
734.801 934 l
h
W*
592 952 m
817 952 l
S
Q
734.801 934 m
806.801 952 l
734.801 970 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
1277.2 619.602 m
1355.2 572.199 l
1373.8 603.398 l
1295.8 650.199 l
1295.8 650.199 l
1348.6 597.398 l
1277.2 619.602 l
h
W*
1132 727 m
1357 592 l
S
Q
1277.2 619.602 m
1348.6 597.398 l
1295.8 650.199 l
S
[9 36] 36 d
1132 758.801 m
1357 758.801 l
S
[] 0 d
1402 817 m
1582 727 l
S
1582 817 m
1402 727 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
734.801 124 m
826 124 l
826 160 l
734.801 160 l
734.801 160 l
806.801 142 l
734.801 124 l
h
W*
592 142 m
817 142 l
S
Q
734.801 124 m
806.801 142 l
734.801 160 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
1274.8 1550.8 m
1366 1550.8 l
1366 1586.8 l
1274.8 1586.8 l
1274.8 1586.8 l
1346.8 1568.8 l
1274.8 1550.8 l
h
W*
1132 1568.8 m
1357 1568.8 l
S
Q
1274.8 1550.8 m
1346.8 1568.8 l
1274.8 1586.8 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
1274.8 1370.8 m
1366 1370.8 l
1366 1406.8 l
1274.8 1406.8 l
1274.8 1406.8 l
1346.8 1388.8 l
1274.8 1370.8 l
h
W*
1132 1388.8 m
1357 1388.8 l
S
Q
1274.8 1370.8 m
1346.8 1388.8 l
1274.8 1406.8 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
1274.8 1730.8 m
1366 1730.8 l
1366 1766.8 l
1274.8 1766.8 l
1274.8 1766.8 l
1346.8 1748.8 l
1274.8 1730.8 l
h
W*
1132 1748.8 m
1357 1748.8 l
S
Q
1274.8 1730.8 m
1346.8 1748.8 l
1274.8 1766.8 l
S
q
0 2040 m
0 0 l
2180 0 l
2180 2040 l
0 2040 l
h
734.801 1744 m
826 1744 l
826 1780 l
734.801 1780 l
734.801 1780 l
806.801 1762 l
734.801 1744 l
h
W*
592 1762 m
817 1762 l
S
Q
734.801 1744 m
806.801 1762 l
734.801 1780 l
S
/DeviceRGB {} CS
[1 1 1] SC
7 7 2160 2025 re
S
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 102.584 90.7] Tm
0 0 Td
/F8_0 10.9998 Tf
(0)
[6.115889
0] Tj
0 -18 Td
(1)
[6.115889
0] Tj
-16.3844 18 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-90.6719 0 Td
(numbers)
[6.115889
0
6.115889
0
9.162833
0
6.115889
0
6.115889
0
3.662933
0
5.4999
0] Tj
-7772.71 TJm
(17)
[6.115889
0
6.115889
0] Tj
37.6151 -18 Td
(123)
[6.115889
0
6.115889
0
6.115889
0] Tj
37.6151 -36 Td
(5)
[6.115889
0] Tj
-16.3849 -63 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-77.8361 -81 Td
(empty)
[6.115889
0
9.162833
0
6.115889
0
3.057944
0
5.4999
0] Tj
-0.0006 81 Td
(0)
[6.115889
0] Tj
-0.0006 63 Td
(1)
[6.115889
0] Tj
-0.0006 45 Td
(2)
[6.115889
0] Tj
37.615 81 Td
('Cheddar')
[2.430956
0
7.941856
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
3.662933
0
2.430956
0] Tj
37.615 63 Td
('Edam')
[2.430956
0
7.336867
0
6.115889
0
6.115889
0
9.162833
0
2.430956
0] Tj
37.615 45 Td
('Gouda')
[2.430956
0
8.557844
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
2.430956
0] Tj
-16.385 99 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-88.8463 81 Td
(cheeses)
[5.4999
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
6.115889
0
5.4999
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BRSQWT+Helvetica
%%EOF
