%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 194 155
%%HiResBoundingBox: 0 0 194 155
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font IMSIFF+Helvetica
%!FontType1-1.0: IMSIFF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /IMSIFF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-22 -218 762 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 67 /C put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F872B092288AB4E433417193564C10FF9F9378064D49B1A2A5D9E9B
E835700215BFF97FEDD1A467992222571F1844860296640B1C2A73FC726262E7
5458325B2F5D5A226FE6A47A6C35890BC79295A0D8749A386550B06FEF7C5293
2888A149A7549AA247705219403D3277F3211C86407FB645ED95A223769571B5
0DAF746F5FB3482AEC7890D0FBEBBC7CA0BB8618BACC27456F769F336F2CFFC0
CEAF496B3A9CC23FD60AD256680A3776EA3DDF9CB1CC724EA209506BFCE1F42A
44907C8B7544025D5F4DD071ED677A965A17FB7488D2804A2E3F89F391975E23
4FCFD4B900D1582EF5DBCEC812816B494C1E4B803909C4B3A8D04621A5D7D7B3
1D79961C8A5CDD2C15CAC54BABCEE7FE89B31A7E00527849440E4775D2E26E97
EF74886946BFEF7EC2FD987537748ADCB6724687D4FA859D77D81072DA46BC0F
D48AA1515CD79FC4966492C74AA3B2FD05EF959C888CB411EE1CFC6487DB68B5
6D051CFD99BEF8FAFD549C4736A4E31729149F0C053CAAC8A1F5B75BDC77E88C
5E15CA0B5FDF26CE889BE7BDD20E256A87CA24B21C4066679707C1962DCA0F11
FD5CE562D35B0C05AF7E98BDE2DAB2138593E2620D86E5953E37304BAA930A8D
9AB202D2864D3449E5A2EE05335AA42F9B6D09751BC98E7C07B95C1B154DFCDD
A1B9BD72EE724B7E0E0BE4204407821F997D2483667D350B62EE1D596B6C59A1
ABA54CA3B54497E347A14B1611C28355B06F81F2D9CA2839D0D1E2C204E7177A
8FAE848CD62D30EEE640F3CD7080F8015D2651C69054742F21D7BEC62E1ACA63
11E569E486BF620607FFFF12DDFCC73540CD4EDC5D60C07CF6C8CB12C1C8E0BE
D03C525894AF0A923BA892E82BAA6CFBA124D1820556FB4B0DF37D767405A402
016215C45F2EA7C05CF5E985B98013A1F110FFC6CDE18CD8D580E0E30F9AF1C0
C18F9C0A540EC5A35A77E03CB7BB8A4F555A53BEBA19235329782550A73A4D6B
B3F0B9E744438E89E367BEF656E1B5BC2028CA38D7CABDDA05F89B0E78470884
22018EFBB500979F8FE140F35EDC5FDEC820345C8802D4ADC905423D5FE81DE2
C823C5B35632AB1441186811BB7A1847C1286406DBFF05A5EC0F0E3886ADE7AC
F029840833DF325D402338EA6B21F8E482ECD0B60587CB08ADB235603BB44F83
6F3963B3F172B366D5AA68DEF5782268B5719F020DE7123D3804E03E30D4CB93
9E31A5A8969A5E6E9361963D6E6280B1E67B40E4A798F6AB8FA11B1B22C900C1
B31D35059E3F5742F3E0FB83B112174294929551053A5380118A493C5882D35B
4F576F49FB8FEB8597FDAA8B8CBF1C2794C2C2DE227918FF0DC5CB7841FB94FC
5FB2D75169EA17B8383B90046103EE40A9AF7A6953393DB2DA6426BEA8E21FF4
BCC9AD7DEB324E27F0028428B9EEC3F481E5C98665D1B1F2D881A9CE01D241A3
37077DEAA5A6EA49806D02991CAAA1E0499F0064F5115E0C9E43A1872147FAD9
0E45AE5D3F4EF84446F35568A12092AA8B50BBE9800C602194027B8AF7BBD69C
C872D36DAC48B63396ED9908788072FCEF93D54703033763CCF4C5B91BFA8812
64E784614BFF5BC13E1014BDFA5F5E0AF1BE2622AD862C93A3B8259625A8BB7E
8071B026EA39225BE759C594F2E52D3072517B86185CF16503CF9E5FB6C2C287
54F17709296FF042DC40912844BBC1526B9F133E4694AC0D42FFA1F0C8B1509F
396437EA5F5A9EBEBB84CC587A308F1E03E7CBE4764EE1C6FE820728FAB937D5
5D2829F2D8C3A4DBDAD322A048CDAFF149211A6D0F4EAEA671641E4A3490C1A5
CA6391616FB3AD812EC7F5FF5AE4EDB35387F1161B1488EF72B1B9E8942CB5C2
4342D71608739830010A060A2E735A97D0651DB4FCAA78B36688AF770E51AE38
24DD330EDC562855730EFAA8AC2A327B113D79365F6453FEDB3E3173A727168C
D95B2C5473FDB71142C267961D80B6C2FCAC7D3F9A5F88B7ED8C49F211ABF71C
49356A4E2117DD868DF6B3230E5A70696BC269DF7369B587750D480279B09792
D5F7BFD69459A1D37532985DD783ED43FA703AD79AF0B9553CC32E59C719A36D
F0014EDFB28B38A7179BD4058431FED74891D42CA50201F237E5D3F046B53D1B
D1061D7036C35AC6811A52B545C4A1B79A12D77B43BA0CF6BD367C5E9AE5CBDF
B5427AAC4D8F70F822C8990618092F904780BD27DEE1EF8646621793BAD1DADB
87B7DB1DB8ADD7AF62CB761E5CC94AC146211ADAA9D125FA9CECC40D0487FDAE
EED05A59E1BABE01A5AA9569F176148EA7376C080EDF4E20C799EFEEB3912619
A2EA898E28238A2114051BF28FA32B4D9F0B9033E34C6DC3EE8DDC71214C7120
320538CDB928AAAAECEC5E3ACC5FD1E343F6DBC1C163C50C0C658C1487C3F10B
7A0188F984083AC9232EEB660F25CCA99EBA269557A030E01B8ADAD089FF1A91
E7A761B0EDE45E288712EF042D5E454B56D6C398034C973F4BDD2900AFD6404B
F342147684A394C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /IMSIFF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 194 155 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
1700 1177 225 225 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
1700 1177 225 225 re
S
1700 727 225 225 re
f*
1700 727 225 225 re
S
530 727 990 675 re
f*
530 727 990 675 re
S
575 7 810 405 re
f*
575 7 810 405 re
S
q
0 1550 m
0 0 l
1940 0 l
1940 1550 l
0 1550 l
h
447.801 1294 m
539 1294 l
539 1330 l
447.801 1330 l
447.801 1330 l
519.801 1312 l
447.801 1294 l
h
W*
305 1312 m
530 1312 l
S
Q
447.801 1294 m
519.801 1312 l
447.801 1330 l
S
q
0 1550 m
0 0 l
1940 0 l
1940 1550 l
0 1550 l
h
1617.8 1294.6 m
1709 1295.8 l
1708.4 1331.8 l
1617.2 1330.6 l
1617.2 1330.6 l
1689.8 1313.2 l
1617.8 1294.6 l
h
W*
1385 1309 m
1700 1313.2 l
S
Q
1617.8 1294.6 m
1689.8 1313.2 l
1617.2 1330.6 l
S
q
0 1550 m
0 0 l
1940 0 l
1940 1550 l
0 1550 l
h
1617.8 845.801 m
1709 847 l
1708.4 883 l
1617.2 881.801 l
1617.2 881.801 l
1689.8 864.398 l
1617.8 845.801 l
h
W*
1385 860.199 m
1700 864.398 l
S
Q
1617.8 845.801 m
1689.8 864.398 l
1617.2 881.801 l
S
q
0 1550 m
0 0 l
1940 0 l
1940 1550 l
0 1550 l
h
1032.8 110.801 m
1124 110.801 l
1124 146.801 l
1032.8 146.801 l
1032.8 146.801 l
1104.8 128.801 l
1032.8 110.801 l
h
W*
890 128.801 m
1115 128.801 l
S
Q
1032.8 110.801 m
1104.8 128.801 l
1032.8 146.801 l
S
q
0 1550 m
0 0 l
1940 0 l
1940 1550 l
0 1550 l
h
1032.8 290.801 m
1124 290.801 l
1124 326.801 l
1032.8 326.801 l
1032.8 326.801 l
1104.8 308.801 l
1032.8 290.801 l
h
W*
890 308.801 m
1115 308.801 l
S
Q
1032.8 290.801 m
1104.8 308.801 l
1032.8 326.801 l
S
q
0 1550 m
0 0 l
1940 0 l
1940 1550 l
0 1550 l
h
492.801 304 m
584 304 l
584 340 l
492.801 340 l
492.801 340 l
564.801 322 l
492.801 304 l
h
W*
350 322 m
575 322 l
S
Q
492.801 304 m
564.801 322 l
492.801 340 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 170 144.7] Tm
0 0 Td
/F8_0 10.9998 Tf
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-92.2395 -18 Td
(suit_names)
[5.4999
0
6.115889
0
2.441956
0
3.057944
0
6.115889
0
6.115889
0
6.115889
0
9.162833
0
6.115889
0
5.4999
0] Tj
0 -45 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-96.5184 -63 Td
(rank_names)
[3.662933
0
6.115889
0
6.115889
0
5.4999
0
6.115889
0
6.115889
0
6.115889
0
9.162833
0
6.115889
0
5.4999
0] Tj
-167.836 -18 Td
(Card)
[7.941856
0
6.115889
0
3.662933
0
6.115889
0] Tj
-117.0001 0 Td
(type)
[3.057944
0
5.4999
0
6.115889
0
6.115889
0] Tj
-54.0001 -117 Td
(1)
[6.115889
0] Tj
-54.0001 -135 Td
(11)
[6.115889
0
6.115889
0] Tj
-102.6149 -117 Td
(suit)
[5.4999
0
6.115889
0
2.441956
0
3.057944
0] Tj
-106.89381 -135 Td
(rank)
[3.662933
0
6.115889
0
6.115889
0
5.4999
0] Tj
-167.00941 -117 Td
(card1)
[5.4999
0
6.115889
0
3.662933
0
6.115889
0
6.115889
0] Tj
-112.50001 -99 Td
(Card)
[7.941856
0
6.115889
0
3.662933
0
6.115889
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font IMSIFF+Helvetica
%%EOF
