%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 195 52
%%HiResBoundingBox: 0 0 195 52
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font TZSTAC+Helvetica
%!FontType1-1.0: TZSTAC+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /TZSTAC+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 535 732] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C631527598D6188079B1EEE26B922F320E93FEDA598503F5E51A3CF
2BB54DF56567F0AF10D77E4ED3BF4183EC45855217AAE3C562B6A59B122DCB55
9300C4EE6A35614B0B080F0E24A45CA272B68ADAB9759CEA9977B7022A0D1A2B
A78228C7761F640968488E77A116F9C0CFD5E6FF09F80AC8AD7B060ADF616FA0
59788E3FA902A61BDCBD3A7C2B1247660C35E9C73D446FF577248086FF0D2712
05F2F8DF46CC324D85D9065D45ABA9433AFA49AA7B6CCE81C21EAB7E704BC095
FCA20752164C747DFA5FB06008C3334EA025E92B13E823A3A297993B1E0D7B84
BB1A94CF94E5D0A00A2429FF490BC8EC580F4FA65E0A0FCDCDF20A9C94853532
B1426915C783C9785C063AEE611A3A54F577104BA86F5C350973FF5D7F746BA5
2D19BC7F51D10EC383C3F563888CE536F789F7B82980D209084DD7E6A7ABDBD6
97B511AD3CAE33990F6282B477FA86AA83318B328F9DAFCBD1A3DFE69F1B4203
F9C44890DABEB51DB8B3C22E2A12E01F90FA3202707A0A78906F43E5B6031673
7D76DC6FD6D04E92DA6DD16114BC53BC966425B70EE69959E187E2085E499394
881F0862C6008D75017B0768EB4E01A99B8F5161E3F8C1970134745083B15BD8
0C66EC92D6654918D557A57D83259AD11960A04E8F941059DE6B7B91C730F14A
C8E59D9DF3C21117658A62F1D1A6225F77470F7356A189F6D7B066D40B254639
BE75363E5380753E9ED76633154D0AC2F37053A89819EB9584FE014B9B7691AF
CC4A3B5F8F0B9D2DC423C85E09DB25C45193A1C6695B3D6502D886F61606385A
8CBE15C56D13659358C329955CE40DE079665C0A5873A46C26543824D24E66F5
834760260F92F1DA8C91DD613F14DC52933ADC7F3FED7EAE71EAB06DA99E98F5
4858BBC642CDBACF9FC40DD6D14597AE7022B4EB8DC0DF5DB4694B3F3F1CF901
E58F9AB1B0730B8231592C14FC5BEF75569ACB81269229C6AA514302A6BA04AB
3E8BA3EC37718C200E5843A427B7113D1648B929C22EB19AC480506F55AE9C2D
F22EB8B3290BC85C1DAE7B2A9D1F3AEC48F82524FC7F11FDD5B2ACA1F2A3E60B
6EB3B2B43710DB33B9114FA183BA5B180BCF79C415D96F97DE61AF86354BB11A
A51F2A29045FA05A2B52105319C0F3D2C4EE68953448EF0FC4CEE7B76110D6C4
612F1E674B369EC6F5B9861851A46A9E5E45FCE92C3C712441807A59779D25B5
F353E6662EDB531C5C5D9D0BC586908C305B94F586443D3D214C1390C975C920
D67CBFB6330E141953661AD4BA74B51F47584966AF14F20C0B408EC40B8CFCF0
2B7C901D6BF56A67113756C6F58FAA57D72B5075DE9BCC9D1705D4DBF52B8C9D
359039CD20027614CACD3A4197474B67A6D203AE35A305EA4D1A1BA424E36625
211C5AC8AA59A0DE9C6B237F71020D87CF4A127726DEE06D575CF96011B6325C
D9EDB4BF757856136AB13614E1D8C3773ED9E29725C562DBF560098EFEB49FA8
6FFB4F9411DB79F012EDE7BE4638B54EC4C7A46C244337D54570554B52B0A1C2
852CEA6685A98C6E7493EAB88E5080362FCC2095F8086CEA6CD7CFA4D721A2C4
073EC2263179E85F498A8A4E441A9660FC63501DD19E8CE33230A33A58B9F20B
98F62B0FEBC79E7F19B51337D20023EE58A14A45A43F4B30EB5C0287EB1EB854
7A1E957C83D3CBD83D7D6CB4BC43DB291706DDAF0B4C011A80E6B82DF6CAD592
CA50D63C88F931258D00600889FC11EC94D39F298F91506AF674ECA7219B626E
C3498642DE325B903A07D28163E4820B4034D4164F580216793A5436B80194D5
41912A092F5C61961CB6D993FB5083DFD9013B609FE5818AD99D1FAA8075F63F
C999E17D8578BE386FD6F589522E501C3A5A92DED0FDBD9558F27D394AEAAB2E
EC0E74E2D108B4E944A0580F95F17A61BB29D4CB3905E150CC8CD0D49CDD808D
6E731C54CAB23A4322597ED72FD61CEB24757B417F42781C5353CDF643FAC5AB
F057A172E415484847A24932240E27A8FC7F266415A08718209459C3A143A293
78A46D0D2E0FC3C6967BD388CF7D74D5C76C3F153318A620264CF0ABD721FD55
F23D4565F1BA62049979A149325BAABAC4B2278D0E02583814170CEDFB070584
6B3A35D445994C5E91159819ED3003AE70B0CFFE119B729D4D3E2008AE259291
A000C0DF8B1C0B245AC46542DB52C026D226ECBA75DE6E9E159B15FC634C71E6
4CB410774915CDD6BBA43E9430108A9AB55F8737B479F85A5CB3B408CEBE00A3
83AF063E14D36E1510978AFADF7A6BB669E40C47CEED0B729762816414622225
FB074DB41576DF1F45168864CC27EA633E57682B70338775E182EC6E5CBD6F74
A7704534F0AD8CF921289EFF2728CCE5EB48150CA1096FB01DD653BDE94FC03F
241D1E387E8CAB5CC4CF06D4DCE7052B4E9BB0E5D0493B709E910280C0963EF4
2FB17178CC25C11E6D782005DA2F130101A0D8C69E3558DD8DA2D9D38C5C7895
424FCF2698A9D5342602B757DAD0C00DF54D2AF8075093DF4479E275869D1184
E36E56623A9A1789714FF01925A3FE5E01BB3A732F3B6746877DDF70AD24AD00
4C964F9F9DDED705064464715CE3A2058AF1FB71D2AC05B630C435C15F00D359
922AF6094A7837AD566563E9AA96E76E685E22D7477C3655FD717C4CD63F0953
408D19DCB6D2843CA620310ABF978122EC17C8E99497B2B4D602CC2336C98F9E
A57DD06F73CBE49CBFA884D35FC849D3C25BB8E09BE3F981471C9E638E795974
B3317F262F705AE15718897E95079384CC3DF9E24C725AA751A134690ECEBC8E
D94287
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /TZSTAC+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 195 52 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
7 189 1935 315 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
7 189 1935 315 re
S
q
0 520 m
0 0 l
1950 0 l
1950 520 l
0 520 l
h
464.801 333 m
556 333 l
556 369 l
464.801 369 l
464.801 369 l
536.801 351 l
464.801 333 l
h
W*
322 351 m
547 351 l
S
Q
464.801 333 m
536.801 351 l
464.801 369 l
S
[9 27] 27 d
682 504 m
682 99 l
S
862 504 m
862 99 l
S
1042 504 m
1042 99 l
S
1222 504 m
1222 99 l
S
1402 504 m
1402 99 l
S
1582 504 m
1582 99 l
S
1762 504 m
1762 99 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 9.36406 32.4] Tm
0 0 Td
/F8_0 10.9998 Tf
(fruit)
[3.057944
0
3.662933
0
6.115889
0
2.441956
0
3.057944
0] Tj
63.3359 -4.5 Td
/F8_0 22.0002 Tf
(b)
[12.232111
0] Tj
-262.174 TJm
(a)
[12.232111
0] Tj
-262.174 TJm
(n)
[12.232111
0] Tj
-1080.35 TJm
(n)
[12.232111
0] Tj
117.3359 -4.5 Td
(a)
[12.232111
0] Tj
-1080.35 TJm
(a)
[12.232111
0] Tj
-262.174 TJm
(')
[4.862044
0] Tj
54.3359 -31.5 Td
/F8_0 10.9998 Tf
(0)
[6.115889
0] Tj
-1080.39 TJm
(1)
[6.115889
0] Tj
-1080.39 TJm
(2)
[6.115889
0] Tj
-1080.39 TJm
(3)
[6.115889
0] Tj
-1080.39 TJm
(4)
[6.115889
0] Tj
-1080.39 TJm
(5)
[6.115889
0] Tj
-1080.39 TJm
(6)
[6.115889
0] Tj
18.3359 -31.5 Td
(index)
[2.441956
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0] Tj
49.8359 -4.5 Td
/F8_0 22.0002 Tf
(')
[4.862044
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font TZSTAC+Helvetica
%%EOF
