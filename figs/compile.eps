%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 385 61
%%HiResBoundingBox: 0 0 385 61
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font WRGOTS+Helvetica
%!FontType1-1.0: WRGOTS+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /WRGOTS+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 761 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 88 /X put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F88FA952F0E644CD7B3B8324AA5B96096D4A277F61777F2BA68A767
FF8371A04B6FDE24831FAC83C54671B95258CEA66C14F808D74A9588B2EFCB77
07F890C296061112351E4F73BB0BEB2A7864361D911D5104DC5725619E437A71
D5AEA36B7448AADF13E98F15C56195F1B38E76E926750912E1175FCE63B2C2B1
45559BF0B4AEFDDDC47FA5D8FAF4907304042668EA6CB65FD5510F8E876664F7
705918AB88F5A3FBFBD4292A3BB9E8620ACF2EBAFDE0C377BD918ADCE335005C
148C1EBEFECFE07289489A166577AC9D152AAD4932BD7373F05A736CF2AC19CF
4658EABEAA1CB0024CF4998B7C5772E5868324888F084A968EF70FE62AFBE6EB
B5713861272B3120FA6D15F6AF7DDA44C531E01E35A88A965697BA7F80ACDC8E
56DFFE9A8BBD979A9938428F27D5AF63F4682E7B623A5476DE1CDE14B90661FE
B537C9F63361E69919DE64D38B7CF4BCF0858F4956BAAF5BD3DF8F43FA5119F5
0BFDEC749DB512164C51DB37BD916D8C1019B944F99544C4BDF03840CC04E645
2F775436B3411F3064026D4F1789DA080300F3B280B271E8AED5183C2A163565
379AA57CDB3B159343AFCDD689FE861EB8E12CBBF2EA96A7FEA35AAAD97D4FC7
5F8015A29AA8CB6607DF1087AC74C5EFC0C43D93F9BF233394EF930C3002BF8D
6A66B8AC941C469F605A7ABC888CC918EEF41448A86E4AB6CFD37A6147D85243
F9C838D08CA1EC86E15EF9FC86E60D2499988C053AA057F0205CCBCC4BC7C6A6
061342663572F8E86DCE3B91B763144E29AF64198F666EDC6332CF88082F3D97
AFD3972A330181BEC88894014C29B13CBF1415709748CFFE7A76D1E20007EC39
94301C07FDA28C6E9754F679C2D7E87FE0027BF7B095374108D45524D4E4BCAC
19442334CD91FE7BA0CE6CDB01B4A211D75C54CA7151BF14AAF6B370ABE9C8CD
985B6173A35CB278F6778C31B33C4BD4CED656FA8EC2664BE19D1E212AB967EF
56F9916A0209D851FAB37D82CCB102A70100C1D96D39E3F723B2C735E9F7520E
2A0EDA25EE07DB39B0DC109B4B5264E8EF79DED3E588BB9DC27B90EC70E7FC49
6594620FE6C5501C39D836CECC01477412EDF315F91266A9BC8A11ACE5C699EE
DEDB09C08D4D39266BD9461BB19116F83E84A4DEE6226908D0AAA9C9211DDFB5
0C1FCBE58F39CBC29C591BEB8E30B50CAEF93D5713333353D2CA15265F0387EF
C564E43338FDE1F89E2E24398A938E8BF11E4D3F9C5A436DD7A333E294314D66
19743D6BB0A5935B595DEACFCABA5215021BA514EB6AF1E3347B00740DD21AA2
71442990A8A51836A1B4DFD50B4AA7E4674C42DD3E19B91CFF59E08A30677AC3
356525386C35FEBACB21477A2F80C0A12B1C2EBDE7A81A7655E25693EAE7B731
4DA6E655942C63DE2F731FC3B880EA1A54C3FB88CABC05E6D1EBC0DB27682952
D4E7927CA8D390C2C221B7969BDDE5DBC7CB6D9C220E6F26C51D43FB4349C415
9734AE7C0120FA1D71B835E787948261AA8F5FF8F69AEFE655B12E5DAF4E2543
C10E98C46639AF07D81495501E21E513015E16209B49B9BAA1186C06D54B3CE6
0244D9761EEE404F76B07C62045742B3B733ABC0E1F79758ED2044704C37EDEF
57B0E9E33FDBABCC46C4007E07286751BD310AA5D10203462C2064FF6644C9AF
320F05C8C67FD6138CE34C2143FDC1F41C1373B9737528D8EB5D6A8A51556895
98013AE42A22C0BA56C0A8454A5E0D95E44CF4044405F05BFF50EB0DE7D7AB58
C9347833C7AE116728A3FB0C7D712345E8B1837974B92ACA39A86B18618AFC6B
FB7A2B03BF5C28C553757FAE66420242B1C147287C486749D50FC0030B6DA914
F27A6D4D4F766F05A94329E55477E18785BF343A975DB6D8ED32E54E74CAFE7E
343EF58CD37D740B38FB532A58609E2F047290AC76C128D909548F51442C4F6A
767CE1D0473EAE145044BF445577700716E4C856CC0F4C171F8F446B186E9A55
0AEC915ADF79B02503EF5BF52CE4A8BA8FF012805070EB43377AFCCA9198815B
BD6B8A1DDAF861924F4F49818EC44F2FC2AFB714FB303C2A4ED64FF2432C1E16
A5B2763FAFC2FC61EF01FF4D7AA546E0183F7B2CA0A6190D8FBFD7EE3CD7F837
4640F0057F062A5F89DF7BD5B052555778F25FB5A83B2AF6AF6225CCE8FFF9A8
2B3E6AE366F56E1CA5B1968C0A1FF970CDCA260C28F4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /WRGOTS+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 385 61 re
W
q
q
[0.1 0 0 0.1 0 0] cm
9 w
/DeviceRGB {} CS
[0 0 0] SC
2334.6 467 m
2277 531.199 l
2277 311 l
2334.6 372.199 l
S
755.398 471.801 m
697.199 536 l
697.199 315.801 l
755.398 377 l
S
q
0 610 m
0 0 l
3850 0 l
3850 610 l
0 610 l
h
2167.2 383 m
2294.4 383 l
2294.4 437 l
2167.2 437 l
2167.2 437 l
2275.2 410 l
2167.2 383 l
h
W*
4.5 w
2088 410 m
2285.4 410 l
S
Q
4.5 w
2167.2 383 m
2275.2 410 l
2167.2 437 l
S
9 w
2974.2 111.199 m
3033 50 l
3033 269.602 l
2974.2 206.602 l
S
q
0 610 m
0 0 l
3850 0 l
3850 610 l
0 610 l
h
3112.2 158 m
3239.4 158 l
3239.4 212 l
3112.2 212 l
3112.2 212 l
3220.2 185 l
3112.2 158 l
h
W*
4.5 w
3033 185 m
3230.4 185 l
S
Q
4.5 w
3112.2 158 m
3220.2 185 l
3112.2 212 l
S
9 w
2334.6 54.8008 644.398 476.398 re
S
1593 50 495 495 re
S
q
0 610 m
0 0 l
3850 0 l
3850 610 l
0 610 l
h
587.398 387.801 m
714.602 387.801 l
714.602 441.801 l
587.398 441.801 l
587.398 441.801 l
695.398 414.801 l
587.398 387.801 l
h
W*
4.5 w
508.199 414.801 m
705.602 414.801 l
S
Q
4.5 w
587.398 387.801 m
695.398 414.801 l
587.398 441.801 l
S
9 w
13.1992 594.801 m
418.199 594.801 l
508.199 504.801 l
508.199 54.8008 l
13.1992 54.8008 l
13.1992 594.801 l
h
S
4.5 w
418.199 594.801 m
418.199 504.801 l
508.199 504.801 l
S
9 w
755.398 63.8008 582 472.199 re
S
1337.4 125 m
1395.6 63.8008 l
1395.6 283.398 l
1337.4 220.398 l
S
q
0 610 m
0 0 l
3850 0 l
3850 610 l
0 610 l
h
1478.4 162.801 m
1605.6 162.801 l
1605.6 216.801 l
1478.4 216.801 l
1478.4 216.801 l
1586.4 189.801 l
1478.4 162.801 l
h
W*
4.5 w
1399.2 189.801 m
1596.6 189.801 l
S
Q
4.5 w
1478.4 162.801 m
1586.4 189.801 l
1478.4 216.801 l
S
9 w
3389.4 46.3984 274.203 36 re
S
3331.8 12.8008 396.598 33 re
S
/DeviceRGB {} cs
[1 1 1] sc
3220.8 82.3984 614.398 499.801 re
f*
3220.8 82.3984 614.398 499.801 re
S
3253.2 117.801 548.402 430.801 re
f*
4.5 w
3253.2 117.801 548.402 430.801 re
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 163.8 18.5] Tm
0 0 Td
/F8_0 10.0002 Tf
(CODE)
[7.220144
0
7.780156
0
7.220144
0
6.670133
0] Tj
0 13.5 Td
(OBJECT)
[7.780156
0
6.670133
0
5.0001
0
6.670133
0
7.220144
0
6.110122
0] Tj
73.8 9 Td
(EXECUTOR)
[6.670133
0
6.670133
0
6.670133
0
7.220144
0
7.220144
0
6.110122
0
7.780156
0
7.220144
0] Tj
-157.98 0.48008 Td
(CODE)
[7.220144
0
7.780156
0
7.220144
0
6.670133
0] Tj
-157.98 13.98008 Td
(SOURCE)
[6.670133
0
7.780156
0
7.220144
0
7.220144
0
7.220144
0
6.670133
0] Tj
-85.98 9.48008 Td
(COMPILER)
[7.220144
0
7.780156
0
8.330167
0
6.670133
0
2.780056
0
5.560111
0
6.670133
0
7.220144
0] Tj
168.78 10.319924 Td
(OUTPUT)
[7.780156
0
7.220144
0
6.110122
0
6.670133
0
7.220144
0
6.110122
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font WRGOTS+Helvetica
%%EOF
