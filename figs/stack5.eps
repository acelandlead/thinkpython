%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 241 74
%%HiResBoundingBox: 0 0 241 74
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font JENOHU+Helvetica
%!FontType1-1.0: JENOHU+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /JENOHU+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-22 -176 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 60 /less put
dup 62 /greater put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C61B819D43039764D974E2CD27D64BA38F5D7B4D9986DE0A12DACDB
DB7CA8856A289F93EAF879683146091EF3A2B2DB829E078E81F365C2C5F6C8AA
E6125602E94F26CEA43B1F37A8DCD28C453EE4EDF2A0D662F3BD71721FC97020
AAD1C4AD7920F271477FC5451A7D37AA00292E1F5615677A079A2C364B9E963B
6CE7FD9BBD6BDF3056ABA8C06B14D242779F74F7E3BC8A281B0464A2B8163CF3
55B12AC893830F5EBE8DCA34D9A9EDA49B15E0E35186436C8B9C3A3BD4786E4C
BB0D13B9D2BBA3BA523B0C977E54DA295BF1BCBD08522FC3BA1ACE36096EF1BE
6B7198E2D59C1938971088F7A41F00E30A7787AAE844EEB126B9CCB5EDE49603
7814226E2C0CB4282854903000CEDA66F6B8B2393D6BE09BD93F99D3EA6FB8E6
3C6B7D4741964D59A244065D24C7FCDFA45AB0D87E9778CC13469A57E99A45EE
A4DC67280DD002D758F9C18BBFFBE5FA748AC362349D6532F189A4533E8E06D5
03F6A557F5A1F9984BF0BE682193AFFD92533A5CF5D3D4405161A67EEC48C812
A363400F20F69DA8BEAC085305BA20E7551B5F9E2C93EF237D8DA7D46A63DB88
5E0CFFD08E6B3E12A057EF80BFAF259BB9219FE86EFBF8B438AE514B1EDBE7BF
C78D49948D0A6D6FB693B27BDE1C1106126D5DE864F7A70A7430A1C82B79BF13
793EC704FF6E3F6B57CE35CD193A44359817DB8D5F030C4C174FA563E1622FA3
051C9FB3032FDA3CF1441792643B8EE46E3877D38BF6231A7DDFEC139CFC2DFE
CEBEA89B816361B5973AA4D4A66C7579FE53B87A8B414E4E568D091F8EE4D98A
09A0FFE328A891F10015394C5A3EF415AA6D684D531EAC71D829DC23C71DE5A0
69539C6CFDFDD61A8D5B9F8D1A8616FB231D3162F17F0AA7487AA3B31C76246E
53BCB9BF42A995404DF9D227D739019C45C377AD09EAD223CB5C0FCB716838B0
4D19B2D545DF38DEDEBDC008F3896485778C8879D7D7D1CCF76CD758256530E3
647EF7A304B9946B7BE1904E0607A1FF8AA525EA9B4B079DD8B87C59E60909A3
37B730EA77B2881E744239E15AC9466433D5A4834B239E7C6A617BEE423B4470
AC6C3DEFE71FC8EABA8208F9D83E3A9E40F0DE36367BFDA74AFD2CAE9CCD4A0D
C2E145956674D29D7384D69611CBDDF245E6EEB2AE73687015E137CF6D49F114
3389D4850CD2134F92946475134BFCAB2450BC36190B8D685833FC86566217C0
0540200F1BE9429D5287D92E538FD2FDBD1B5C9420C6D2D7D51B8B3B7591088D
A440DFB0C92602FF4C67611DACFE16BE55DD64FFFAF65321749A031CB2CF7276
A092D52906F51620E20F8A204FA97740D501FEA692CE224899B8ABEFC38AF717
A5DE3FC656483115EA4E2EEBE0A1F36082ACFEA27599572D6356A3907808D0CB
A93AF436ABA877F883AC970CDDB361EAE2FD03C2CD6070A683CD41A1A809C135
F0FE231AA45F615E6FA7D225D56C58F8E4D9F9C4F814F833B9867114A5F4D6AA
1FABB52159635C04F3E1C2450310B483A48E33F667B3F2B8AAB479F7FACAA011
41337AE27C45CFBCF070010EB4958368BF72F2B1FD37216F062D73A47CE8B8D7
16B5411E812A120BA92BE48E4839D4D9FC067992D711CBD90EA2573E5BEBECCA
CA4CD5BBFE60894066904A83EA357F35217DAD7DA90DADB1CCEFDC74E5FEBAFA
481228E3C85ECF0FC119C45E36CA9709D9D44245D3537D50FAAA704136C1B807
0D84ED01E914B5CE49B698A754A438ABE48ECE5044FDE2704F1B185CB478D778
0B0404E5F09F0FD0FB73F7444ABDE615E5A7544982980F28F59E1B867BF03ECA
7073905D16BCCACEBA7D238AC0E8E979323759F452DB260444FE0C6B37827B36
1A13620069869DD2FA57596E6CA7E74676B8B9ABE23B30E7BC1F07BB0FFD0F66
74F88A8E95D68ECC8F108DE8AA4ABE93AF9368ACAE191F4EBA80449605B27200
F1E8CC8CF5F07353B078B2C10BE1773355E48A3E6EBDC14A4C4E8E96961DCA13
E8C7E858165B93043F314B394554F70040F182C4C2247AE7A1610430EEEBF522
BB9AF641D6F4A76C9B2B57CA9C54E57583EF702C5B0B4FC9F34A8566327195F0
EA06FC509400E236B14EDFA071D2CB4C8C680957E161D95D9BDE747B7E7E9EFE
8E7D28745DBA0A138D7F5A79EF90E4ECC42F3833381CD74D9E498F5E0744DB5E
E6926C8E1063AC17A38D0D3E16A21B6DD14EC82C94265E8E8BBA947BD3F49F04
ECC85318B19B72C2CEF62D5C00FC658F659ADC8375D1216160474FAEADD3CB23
6D40E40E5B90271079AFED37B30C364F0F1D021ACF2ECD3DE792E2BD5C79D664
5D40B763D61CA211AE412B02E059CDA38FCA700C72313AEC219D545709AE9A33
E43922298B81ADD84F2D90E30455CDF20AF71253733C2A0953EA14A93D4367A8
C5CEB9FF37ABA0F6F137D922359316594C940E743D44C63C729F395031756E3F
44C90DD8E3E00881FEA4CC4B2AFEBF3D34E706919DE5354FE1518CE75A54EABF
5FB058675923A32267C153B32E92EAE4AA4D2D02E9B3881AE07CCCF578ADF8DC
BC85A2F032EBD562C84AA68AB64FEDA8B3E97655786D8EF741CB0095BF6C2177
EF793A6E05D027A3726192B4BD9AB792A178718C660FD16F243B2C8A70F00944
CF77E772BB7914BB05FF3713D2D58795ED5EB715B73F9790B038A02285A688D7
8753716075AC5D3078CCCE531006525D09AC0B723CB172443CE55C818C69FD39
ADF5BF4E6FC236D8C6C6805D455740EC4C4538F7CE861D48CFBA829B94F7B07A
FBB8ABD3F56D45379A6F2B2535EDE7DBD323D716B66DED14732ECA19B12F1C22
115B704C438C156809199FA87AED655A23AB56AE75EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /JENOHU+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 241 74 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
687 457 585 270 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
687 457 585 270 re
S
687 97 585 270 re
f*
687 97 585 270 re
S
1542 7 855 585 re
f*
1542 7 855 585 re
S
q
0 740 m
0 0 l
2410 0 l
2410 740 l
0 740 l
h
1954.8 290.801 m
2046 290.801 l
2046 326.801 l
1954.8 326.801 l
1954.8 326.801 l
2026.8 308.801 l
1954.8 290.801 l
h
W*
1812 308.801 m
2037 308.801 l
S
Q
1954.8 290.801 m
2026.8 308.801 l
1954.8 326.801 l
S
q
0 740 m
0 0 l
2410 0 l
2410 740 l
0 740 l
h
1954.8 110.801 m
2046 110.801 l
2046 146.801 l
1954.8 146.801 l
1954.8 146.801 l
2026.8 128.801 l
1954.8 110.801 l
h
W*
1812 128.801 m
2037 128.801 l
S
Q
1954.8 110.801 m
2026.8 128.801 l
1954.8 146.801 l
S
q
0 740 m
0 0 l
2410 0 l
2410 740 l
0 740 l
h
1954.8 470.801 m
2046 470.801 l
2046 506.801 l
1954.8 506.801 l
1954.8 506.801 l
2026.8 488.801 l
1954.8 470.801 l
h
W*
1812 488.801 m
2037 488.801 l
S
Q
1954.8 470.801 m
2026.8 488.801 l
1954.8 506.801 l
S
q
0 740 m
0 0 l
2410 0 l
2410 740 l
0 740 l
h
1438.8 396.398 m
1514.4 447.398 l
1494 477.398 l
1418.4 426.398 l
1418.4 426.398 l
1488.6 451.602 l
1438.8 396.398 l
h
W*
1171.2 236.199 m
1497 457 l
S
Q
1438.8 396.398 m
1488.6 451.602 l
1418.4 426.398 l
S
q
0 740 m
0 0 l
2410 0 l
2410 740 l
0 740 l
h
1413 506.801 m
1500.6 482.801 l
1510.2 517 l
1422.6 541.602 l
1422.6 541.602 l
1487.4 504.398 l
1413 506.801 l
h
W*
1173 592 m
1497 502 l
S
Q
1413 506.801 m
1487.4 504.398 l
1422.6 541.602 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 170.584 45.7] Tm
0 0 Td
/F8_0 10.9998 Tf
(0)
[6.115889
0] Tj
0 -18 Td
(1)
[6.115889
0] Tj
0 -36 Td
(2)
[6.115889
0] Tj
37.6156 0 Td
('a')
[2.430956
0
6.115889
0
2.430956
0] Tj
37.6156 -18 Td
('b')
[2.430956
0
6.115889
0
2.430956
0] Tj
37.6156 -36 Td
('c')
[2.430956
0
5.4999
0
2.430956
0] Tj
-16.3844 18 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-59.9422 -25.6199 Td
(t)
[3.057944
0] Tj
-85.9356 10.8 Td
(letters)
[2.441956
0
6.115889
0
3.057944
0
3.057944
0
6.115889
0
3.662933
0
5.4999
0] Tj
-166.5047 -25.6199 Td
(delete_head)
[6.115889
0
6.115889
0
2.441956
0
6.115889
0
3.057944
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0] Tj
-155.7789 10.8 Td
(<module>)
[6.423883
0
9.162833
0
6.115889
0
6.115889
0
6.115889
0
2.441956
0
6.115889
0
6.423883
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font JENOHU+Helvetica
%%EOF
