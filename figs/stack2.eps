%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 139 150
%%HiResBoundingBox: 0 0 139 150
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HLTBZC+Helvetica
%!FontType1-1.0: HLTBZC+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /HLTBZC+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 60 /less put
dup 62 /greater put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F8988FB96141EF37A1D853702185767EFF1B0D0CCAAAB6D1657DC04
2638637206EECD74D7456923FB3F02F028B61B5F72688C40B0A2FECFD8F9DEAA
3227E9ED045193D2B8FF6284EA5429FE75CA6D4EC8329703EB4F2034AC325A16
21DDFD6F96212E4D84E19C7D3BF705EB16CDC3C24A2D28806BD6AC1C3B8C70FB
8CD3A1436CE02DF723AF6B7A22F1B80FD42FEE6347D671B13F8E6670A780EFEB
B9253839CE1FBB5633519441D9D6CAC05C9C2169D829E75BD6FB9AC63F9842C9
44FE4F8A64ECBA73BBFF9E675E9378BFB088BD239A49A9B93AFD57DF1A01516D
988D76742EE190B2784F5159F5561A69CB86E6D2E4EB9AF3149172C848E4A577
9AECF3B1A0B17542BFDEF1FD2E5815AB4B0022382FA03AD6D36CF8F95AD1F172
1BB5DC19C528DC56AC83FACC343E2368206D34D5D5BD32E069D8E6BE7D0E56D7
EBC68A977DB621D01F03174FFB4EBFB2B63729B9CF8CFCFDE7F5CB91F8050AAF
9A3C271161755CCEA4A1B1E6741E060A0D29E555C2A3F292939C98D7C35DE48A
26E9B94B8F2C98D390B9E24A555C3B2BAB4588EDF19EECE02F4110744FBBFC02
44812721EC764338A4F7BE3FB41602EA2E77EA3347B9315FD96EC3B2314625D9
A0991711FFE0C2567DEF991F00CB5AED8F03B848B9C64021E7D4C5E6D39EC250
ECFEA2AA5E59436E597E4826AE700150555533D9E064A402190E508B8B948564
18127C3B84F01BB5C47265999F289DEAB15ACEC649A1B404C7FBD59D0A77ABFA
17295B17CFC5FC02D150AEB39FEAE5727BF8AC7B62BE7CB4EA40085973606AF1
889F3BAB04EC71E50720C4FFA5C4D8B3283472953AF72E8D0EF53EE7DF2F4C07
68C97F450CBC8C203E2E1B39F5BB4EF49F1C79C18F4192D221627C4A179800AD
F9550D735BED4BEBF0B33522CDBAB9D4A2132A706507F512176B60A50ECC6A10
11EC14CC9A1119494815574DC8C3DF7CA1E5CBA0F2513807EBAE6B119EFC1E1F
0F4A36EECA3DACAC5035AD2DBD83257956F0097AFDAA61980EBBABD09FC3EED1
14FF09B50EB20BAEA3B55A057F1913407E65E1CDE6B8CBBA3215CB4DAB2DC055
00D6752508022B8EF4A5E9EA5122568E4B4ABC5A3D2AA10D0BC1200026F783E5
9E14C1BF3F3B5182C7D2466572B2F39812690F95705BDC4CF1FEF3A9B9CF05F3
B58F06546462313314A7BD07F924DDF30767676CDED36E1D5B2DAC44F587535F
69BB9CE2F713929330ADA8721CBECED087C68984AC2C2FDDF733AE9C4A211E74
EEEF5A75595361E30EA00723BA5FD3DDE63A9F44920CE9A5BCB1C1D58CD3FB70
6E6D7111C127743C67B953483A099729E0A6FAE149910E6CBD4A0D620AE6EB2C
D467399D26C1D0781C789AB774A13CDB58DA3B7D3213191D902DABF07A0B4D04
D0F26DFC10A7FA245D67410EFB85721C10457F7BD62A5AB0620D13ED62522A23
9164F7ADE6F570BCFAFDFBC27B3A080FCEEC6E5A679424857B7FFA76E109FC70
589043368729A85E59F9C328AB2DD03BD459210078F522A0648A1DD066B6E8BE
4BC342B785E4C88DB0592D134EB5CE13B01C8C9F21CCA3AA1B437CD59630AB83
E6D7C73DD5A0D47938868B9E12C352CE616A1E31AB0309A536CE1B9C03AD1AE6
DE3AA1F306CD2DD6EACEF8231B1B658D44019FA8AF45A654DD9301D730898581
70B127D717512CD481756827D862EE3B7B53FF0046598EBDDE7A9DB5AD543E97
B82811740128666A2869F83FCB35066C3CB54665ED4BA6AA66829158CE58B02F
A5EC7A1BF527089BA7317141709E27DD4CD3CA4A47BE95C3F5D2EDB18B8E6DC7
E21743864244730D4B39EECBBB807B47B29B4FCF608849937B4CA1F2784455CB
52218959C80272DAE5B2F8F45A44C7ED41015548BF80A98D5701F3BF8EB44AAF
4123B667116B20944E85958C52A06D3B40421620C4A131AF32595C0E1B86E040
77B7AA2736B5B643159A6A68231FDAE8FD06BB8459401050E6E7D0E0C0E6FB34
6A9DBD08BA8DC76E18ADF6D11F734CA577B20CB1761FC3277F7350B662B27FF9
A7059128B13144198A3B63B658BA5A980973D3BF04BB88F9AC0F6E81DF343D0F
680DAD19F230D83775067CE6F3F5062DFBE0E11A47A14141B05B62BC7180159E
662BEEE4327A53F27F07D01432307F2B29A0C9A14E11BCF37A1484CBD13E0A14
B93F2A1E1F22B57C0B4F552DC01183D0F48DFBDD8A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /HLTBZC+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 139 150 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
662 1267 720 225 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
662 1267 720 225 re
S
662 952 720 225 re
f*
662 952 720 225 re
S
662 637 720 225 re
f*
662 637 720 225 re
S
662 322 720 225 re
f*
662 322 720 225 re
S
662 7 720 225 re
f*
662 7 720 225 re
S
q
0 1500 m
0 0 l
1390 0 l
1390 1500 l
0 1500 l
h
1029.8 1055.8 m
1121 1055.8 l
1121 1091.8 l
1029.8 1091.8 l
1029.8 1091.8 l
1101.8 1073.8 l
1029.8 1055.8 l
h
W*
887 1073.8 m
1112 1073.8 l
S
Q
1029.8 1055.8 m
1101.8 1073.8 l
1029.8 1091.8 l
S
q
0 1500 m
0 0 l
1390 0 l
1390 1500 l
0 1500 l
h
1029.8 740.801 m
1121 740.801 l
1121 776.801 l
1029.8 776.801 l
1029.8 776.801 l
1101.8 758.801 l
1029.8 740.801 l
h
W*
887 758.801 m
1112 758.801 l
S
Q
1029.8 740.801 m
1101.8 758.801 l
1029.8 776.801 l
S
q
0 1500 m
0 0 l
1390 0 l
1390 1500 l
0 1500 l
h
1029.8 425.801 m
1121 425.801 l
1121 461.801 l
1029.8 461.801 l
1029.8 461.801 l
1101.8 443.801 l
1029.8 425.801 l
h
W*
887 443.801 m
1112 443.801 l
S
Q
1029.8 425.801 m
1101.8 443.801 l
1029.8 461.801 l
S
q
0 1500 m
0 0 l
1390 0 l
1390 1500 l
0 1500 l
h
1029.8 110.801 m
1121 110.801 l
1121 146.801 l
1029.8 146.801 l
1029.8 146.801 l
1101.8 128.801 l
1029.8 110.801 l
h
W*
887 128.801 m
1112 128.801 l
S
Q
1029.8 110.801 m
1101.8 128.801 l
1029.8 146.801 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 8.28555 135.7] Tm
0 0 Td
/F8_0 10.9998 Tf
(<module>)
[6.423883
0
9.162833
0
6.115889
0
6.115889
0
6.115889
0
2.441956
0
6.115889
0
6.423883
0] Tj
-4.27852 -31.5 Td
(countdown)
[5.4999
0
6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0
6.115889
0
7.941856
0
6.115889
0] Tj
-4.27852 -63 Td
(countdown)
[5.4999
0
6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0
6.115889
0
7.941856
0
6.115889
0] Tj
-4.27852 -94.5 Td
(countdown)
[5.4999
0
6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0
6.115889
0
7.941856
0
6.115889
0] Tj
-4.27852 -126 Td
(countdown)
[5.4999
0
6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0
6.115889
0
7.941856
0
6.115889
0] Tj
69.79878 -31.5 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(3)
[6.115889
0] Tj
69.79878 -63 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(2)
[6.115889
0] Tj
69.79878 -94.5 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(1)
[6.115889
0] Tj
69.79878 -126 Td
(n)
[6.115889
0] Tj
-2863.66 TJm
(0)
[6.115889
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HLTBZC+Helvetica
%%EOF
