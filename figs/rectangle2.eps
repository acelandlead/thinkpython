%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 370 60
%%HiResBoundingBox: 0 0 370 60
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font AHPELA+Helvetica
%!FontType1-1.0: AHPELA+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /AHPELA+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 708 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F872B092288AB4E433417193564C10FF9F9378064D49B1A2A5D9E9B
E835700215BFF97FEDD1A467992222571F1844860296640B1C2A73FC726262E7
5458325B2F5D5A226FE6A47A6C35890BC79295A0D8749A386550B06FEF7C5293
2888A149A7549AA247705219403D3277F3211C86407FB645C11AE23B61A759C7
4EE413D6535BB0FE6CC04B8127A7B22A23F2F6C01FA364C49E6C85F31B83BC08
AD24FF4CE933668CF392C4BFAF3930645B86402D77F7FAFEC9A202FC72122933
8682E75AC8528214804767DD3A541D730B03795CCC720859F6FB63299A924D52
A44E7FF3770E1428C46DA97D77EB6336F2A7E16A27CF794C2F358F85F592EE67
3A6AD62AD3CEFEA059DE61293F46998AC96A65F1035AA0A3809552DB4B07AC78
1B2073481EE2EFE49C91CDA219F769B0A15667DBE3BD231D273AD99289DB2033
F5EAB18D20DDD998990BB28C1C725F9F23EB3870E7261EA91B830B19C45243B8
BAEDFDC1C51B5D3B59047C2A66A3CFFAFE0A12AD5826FF325670F91DC89EDBA2
880843E2DA63505E49E5D1D717DE80FDFDBE23382BBE112BC01B1E1744BD8D65
81B1E0C3E0EBC29D399C5785D2E5FB3EA77EFD84CCB30BA5C481AF0BC516E77E
D84FA4E99DD61540D69A7563269032778B3751051B0568DBA250377CF7A004C0
ED37DFAD95E629AD58D7D26C57B750CF926F2D69FAF67E276A5ED80D2BDA0798
5D82BD58471F142BE044C49005EEA59B79ED07350566638FAAFC107C8B37549C
B6A4C5B7E7DA8C637DE7869B43314F7AF15F7C12F51558453801DF769B2F5803
13C7ED2D9FD710F6DF8A888278C5691560043314ED47289701C555A0B245ECD9
C1BE4BF0AF8B71443B176D762C062D8B73C777F4A8701738989F61FEEC1A0245
64E001C4F7A639CF948B70DE714841A6F33EE044514AC8E24776CE601A13D767
B1820C18ABC6172C2B7203D2B7BCEA6D945E12C44BD4C9BE3717208E4E0D3928
BF291679EC7A951FF5DEFE597F9EF36943CA7D044391CCD68A8C648062F58765
521F7655DE0328524E27F5E46A4C29FF9794C2D5400ADB91E10A6C9286E3E163
0828B69E42880A0D4F080BB3FF706812DEBDBC74AA4B693A3ED49859298E09CC
7EBD2143D400B46F791FB3948BC429BFE5B5069D63100E4703E1857215DB1D51
488E1A2F70381914A27C8F6854E019985CC273D060C909C7FB579B01972EC3F9
6FE327E8DA2B4F9935E7E69A19E9E853C35E8F9BA9567EB4C6B8007D07EB765A
A4387CACB0AF6DC70A910DD60DC9AD20A974CEF58B69F05653D3EE72D87AABAC
03E6B9B52DA940E8B1E19B7E77B5117F3947576DCBD8BF108A075AD2AE96D8FA
56ED9CC3A8D73AAE3B9FF665796797E4E8A0E2604DB5141081ACC9D8E60C4411
AAB50773A3C44237FDFE996F88AD54AEC1EBF96E1F247C65A433D8D4C1E06BE1
AEEFB79A20199F9096A1EEDDB19281EDE1218FFB9EE98E762FCBB036E544F500
9875ED9E9C402269EACF78C1559263A6C582C76DFCD60B26E9B7C810DB857117
EEB588FD3B7C0DF142EE551B7FBB6C3C391B10C425998BF5F9598503BCDADD38
C5CCD7B5CCA1A0F75B3672CB8076B2643DA72D05BB131B208172CFD0C89598A1
ED01A9892098A8605E1C8EDF6519CB7661277E77D24886CE7F12E9F25D147F0A
78067087F32B9D4C90F33AF5E7E8449A812819D6818F3C4728AC6A4A81419936
1179C879858EC773E2E1B98D4D6084C9C83E23EA3C634F5A179CFC49539D3BBD
3A0AF24D87C8230E47426A8D6BC41123B76CDF8C9C5102C3C8C479131CDED670
0BB606340B18A1D7B9705A38A9D768AFF90AF429337FC8306C90C99D58899B74
407C34DEAA0737DEC14C59C3B20699BE42E7D8B66B61728384ED430D9DA4F12B
D5076A2C1BA68720DED8BE193D6E2BA9F915214F65A9ECDCF3A05FCFA2F5BD96
03B2D8CC7C15F120514FA16D6DF54246310BEE62EA86E2D251A0C3736507BCE8
FB6EE64B3E3DBCCB461D41D1D67B2484D9BD929EC80B7B113A2549C73BF70FF0
BD7B23DD087C9B7C366469AC36BC49135083CDC31585214332E8A333033F6755
2E1FB2D459FF3D0DFEDCDF6A88269A7CA23FA0F821F751FC0A4BCB1CCC7697B7
4410AE479D364947029F22BF3D41D96DD1102A467614F0ADF2BB150B675FF4F0
9E14A7466FDEA4867E2696EA8826B675312E8CE833DE6C85D65D25CD37DE7DC9
B2AB1DBAC639EE227A97639A688DCC0AD42291338C2E1966CB0B2A45E3CCFB0F
F0EBEE7D828DEF254AA2449D821B0902947FA6706B23747680503A5321812D46
D35CA15C19BF3F7739D8BAD9685B35BA1F70E8FDC0F2D7375A1528BD705F95B4
F66D4AF443CAC8F133DE07C59DF781687AE92EC1AC0C751A285851E69CA6B702
410E58DEF8C19BF042B71ECA95D5F3E4661ADC72A57723AA6213B04DBCCFF54A
26BF4BABAF763E9D8E4A992F478D37DF2751F6C7CF4DAB0DEDCB1EBF68E78A60
C8BB984298DB7D37075DC29EE584F6FA9B04338902F425
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /AHPELA+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 370 60 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
1544 7 585 360 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
1544 7 585 360 re
S
419 7 990 585 re
f*
419 7 990 585 re
S
2264 7 945 585 re
f*
2264 7 945 585 re
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
1821.8 65.8008 m
1913 65.8008 l
1913 101.801 l
1821.8 101.801 l
1821.8 101.801 l
1893.8 83.8008 l
1821.8 65.8008 l
h
W*
1679 83.8008 m
1904 83.8008 l
S
Q
1821.8 65.8008 m
1893.8 83.8008 l
1821.8 101.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
1821.8 245.801 m
1913 245.801 l
1913 281.801 l
1821.8 281.801 l
1821.8 281.801 l
1893.8 263.801 l
1821.8 245.801 l
h
W*
1679 263.801 m
1904 263.801 l
S
Q
1821.8 245.801 m
1893.8 263.801 l
1821.8 281.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
966.801 290.801 m
1058 290.801 l
1058 326.801 l
966.801 326.801 l
966.801 326.801 l
1038.8 308.801 l
966.801 290.801 l
h
W*
824 308.801 m
1049 308.801 l
S
Q
966.801 290.801 m
1038.8 308.801 l
966.801 326.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
966.801 470.801 m
1058 470.801 l
1058 506.801 l
966.801 506.801 l
966.801 506.801 l
1038.8 488.801 l
966.801 470.801 l
h
W*
824 488.801 m
1049 488.801 l
S
Q
966.801 470.801 m
1038.8 488.801 l
966.801 506.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
2661.2 326.801 m
2570 326.801 l
2570 290.801 l
2661.2 290.801 l
2661.2 290.801 l
2589.2 308.801 l
2661.2 326.801 l
h
W*
2804 308.801 m
2579 308.801 l
S
Q
2661.2 326.801 m
2589.2 308.801 l
2661.2 290.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
2661.2 506.801 m
2570 506.801 l
2570 470.801 l
2661.2 470.801 l
2661.2 470.801 l
2589.2 488.801 l
2661.2 506.801 l
h
W*
2804 488.801 m
2579 488.801 l
S
Q
2661.2 506.801 m
2589.2 488.801 l
2661.2 470.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
1458.8 112 m
1550 112.602 l
1549.4 148.602 l
1458.2 148 l
1458.2 148 l
1530.8 130 l
1458.8 112 l
h
W*
824 128.801 m
1541 130 l
S
Q
1458.8 112 m
1530.8 130 l
1458.2 148 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
2209.4 142 m
2118.2 142.602 l
2117.6 106.602 l
2208.8 106 l
2208.8 106 l
2137.4 124 l
2209.4 142 l
h
W*
2844.2 122.801 m
2127.2 124 l
S
Q
2209.4 142 m
2137.4 124 l
2208.8 106 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
345.801 470.801 m
437 470.801 l
437 506.801 l
345.801 506.801 l
345.801 506.801 l
417.801 488.801 l
345.801 470.801 l
h
W*
212 488.801 m
428 488.801 l
S
Q
345.801 470.801 m
417.801 488.801 l
345.801 506.801 l
S
q
0 600 m
0 0 l
3700 0 l
3700 600 l
0 600 l
h
3300.2 506.801 m
3209 506.801 l
3209 470.801 l
3300.2 470.801 l
3300.2 470.801 l
3228.2 488.801 l
3300.2 506.801 l
h
W*
3425 488.801 m
3218 488.801 l
S
Q
3300.2 506.801 m
3228.2 488.801 l
3300.2 470.801 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 157.9 5.2] Tm
0 0 Td
/F8_0 10.9998 Tf
(y)
[5.4999
0] Tj
37 18 Td
(0.0)
[6.115889
0
3.057944
0
6.115889
0] Tj
0 18 Td
(x)
[5.4999
0] Tj
37 0 Td
(0.0)
[6.115889
0
3.057944
0
6.115889
0] Tj
-105.673 40.5 Td
(width)
[7.941856
0
2.441956
0
6.115889
0
3.057944
0
6.115889
0] Tj
-109.96245 22.5 Td
(height)
[6.115889
0
6.115889
0
2.441956
0
6.115889
0
6.115889
0
3.057944
0] Tj
-48.50035 40.5 Td
(100.0)
[6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0] Tj
-111.17265 4.5 Td
(corner)
[5.4999
0
6.115889
0
3.662933
0
6.115889
0
6.115889
0
3.662933
0] Tj
-48.50035 22.5 Td
(200.0)
[6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0] Tj
-156.23135 40.5 Td
(box)
[6.115889
0
6.115889
0
5.4999
0] Tj
72.99965 40.5 Td
(100.0)
[6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0] Tj
72.99965 22.5 Td
(200.0)
[6.115889
0
6.115889
0
6.115889
0
3.057944
0
6.115889
0] Tj
126.99965 40.5 Td
(width)
[7.941856
0
2.441956
0
6.115889
0
3.057944
0
6.115889
0] Tj
126.99965 22.5 Td
(height)
[6.115889
0
6.115889
0
2.441956
0
6.115889
0
6.115889
0
3.057944
0] Tj
126.99965 4.5 Td
(corner)
[5.4999
0
6.115889
0
3.662933
0
6.115889
0
6.115889
0
3.662933
0] Tj
185.49965 40.5 Td
(box2)
[6.115889
0
6.115889
0
5.4999
0
6.115889
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font AHPELA+Helvetica
%%EOF
