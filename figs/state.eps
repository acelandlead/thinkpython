%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.26.4 (http://poppler.freedesktop.org)
%%Creator: fig2dev Version 3.2 Patchlevel 5a
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 199 235
%%HiResBoundingBox: 0 0 199 235
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NJAEYK+Helvetica
%!FontType1-1.0: NJAEYK+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NJAEYK+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C65F1B97FA85C08BB6445F9320BF93188B0C8EA24DF24A5EA2C42F2
AB482F2E48E3798E3E5506273F9D22ACE54B3B9A85D25DCCD09D99093BC89A24
44E7091D27877FBFB38D3794C43806FDC5D85EB7347913846DAD9E67585FF833
F90C99C4CBFC9054DA5A83DE8E50C69875D36A9D233CCF7C995A5C5069B059AE
9869495CE6F3776666815A7B0BE2C77263892845DE11C111B27E81D82B785D57
64DFBDEAC692FBFE7AC50E296AEED0371E9FF99429DFFE21D68406FFB7114300
01BB2D805B1C7F3E3B770D5D273093880851C126BC245FA5EECAAB1DB60A7683
9FA59B7CD7EC68297EF77010A272F6D08ECC4A111E7C405786F26BD186C7A182
6ED7478C89688A9D4C3D00E9BE3F6A7546E28342ECE9AD419B4ECC05B95E0660
C37F565143A88C43C3B3C9A40689A30A39FC70F403A161BAE9D17B434241E9E6
719183EA8BCC27B3EB332475BA4616B7E4349E1334188BBE276D42851FDAE587
0EBC50525DE6826961873BE00F5B007FCD781DA34817BE7B74E3D6E771CC050F
8FE28E30355AB556263F572D76C6B97A560A7B9C0D5B9EE372A964A9B1A84EE8
6B201A28900EFC6AAC33C69D32FFF43471E2CDD935211101E1ADFC8C9BD2675F
62FEF784D24EAFA7CEC876B1E8F2269FE65D3E3D203DCC8859E1BC7ED9557E04
842EEDB17036D30E00AD1261D25130DEA7061069E0B86361F4AA60A9D0367E23
BAEDEEC1863E7A32EB672A4E497D1E90AE8E59F38D1B4A640EA73FBF7DFFFEF5
1A402FA5F346C82B0BC96DA79E1F6A490410FAC17B5369FBB87EA0F1E282F757
486A5767DE88FB293A7556954632B57C2CB660FA25F3C730AC3362352D63F936
3F407CD2BCFEE5AFD4615BEAA3C79B8DBCE0CA8DFAA8F62EDA731620EF5FB7B1
98C5BDFDAFDDB1167780222932A3F94761687054DD7D51E6C995A6FB11B0A7A1
5490AD1D643BBD95415148F27E4EF3EDB98B4BE60603BB7B5C901631BB9D2A27
35D0DA68E39409A7D35B9764E9D8163A069B9929579ABA8679D0FCDDF6E9F15F
51E3E0FE353D5EA05E2DD9616875DD8A62FE11D12C59F2D2465AE99515AF09F0
1E29BB9DFC2820C60FDEEDCE70F7EFF1F55DB688D891A3149412F53379AB990A
C7CD50A66C37BDCA7ECA30F256A8C55E2DB73F5E781609657B9803AF5A269CF0
C5B5D95ED3FBF1F6EA286FA26A3397E0BCEE2603EC1A3912D012402BB24A6D28
15B11C94156579160813698240DC948C7DCE549B8FE297BD0FE7049511E1C4CC
6FF269A1E9FB4A17E64C68EF105269F31347D6339EA3361F505538158C4EA6C0
74159DDAB8840B734562E0E89DA48330F963CB3B8E15984CADE167DA722378DB
AF26A2D663F5341FBA407FC42B4479BFF3A9BE78EAF30EBAB0F3AD5375CF45E9
B53CECB10316D89F4BE2C926879C74787DADB9575668A9BDD23B8C91B1D33A9C
15F3F0D5460D9C3B4EF4B109BFB1DF188E155D01F2CE974C52FF2F7626568306
B94CF07F50F22493225869D409F1ADCB42B455DF482FF94E9E989EF4BA015BE3
4A07A1ADD50D0412D81B26CFA398A1EA82F9773573BD6925D7FFB3DB4ED8D269
1972B43EC845B323F3880394527AA11686170BCF023002F6D2F62C1B60EC92E9
C7E3AF6DA7926DF6B6791DA7D4DCC2F2F53F28C085FA7491AD5DEA9FEF4E4185
439542AF26B4CBE654B54E05BF3C24B9B0D6E1250BF0AB84C22C369BEE2C754B
54389851B8F98249342584858E12420084E33D2088FE88D7D2B17B0537B96FCA
BB2AECEA564C7B5F9B3B3EF188DFCF104B8CF6B7FE5CEDBFDADA6341096AF3C3
130F7CE8B41A024D228421286CBE537FB5B241AFF749DD7E5F044A3AD36BD1DE
F741F031EB3AE8EBBAA2A5D3304A5640597D04DBF4DD18E87ED629BDD372B319
1FF2FE2246422CC311D7CE4949312B44FCAF89F8C5492E630AE6CFA0213A8277
918D597527678B5A7E956BAE756D01FC293D029F453D82342D896D3219482FF2
B8070F91C95BC11368849FBFA8C284AA4A9070EF4A1DD7B57E8F2A9AABA022D5
B9B4967AD648C484563998550ED6BA8C5B47FEE182E40588F809CAD9A9266AFA
DF72A7E77A60EC6AAACDDF63A792B8619C0363A6A0B6670F1C9F40E61FCBD42E
F2A30A382CA18252230123A402F9FC2916DEBC46D3ABBC2748E6C6F0D500615C
AAD5F30AE9B27F011E215EB5FC54FD0A83796EC1D8931A9EF6D6DED2A34D96A6
9A95EE54FD300C9A8D1B9EBB0BBACCA6778D764BC038FE91CF21F6812970CDAE
CC681843D6E49AC0D14AD65AE3119E4E989D0A6831FE9AD0E959A120ABEF28FA
8320F56E842A96F1F4705E2B2A3A8D9514ECF7D1A4D21427AC777B8F30BB2C77
4D6A322A9A0BCF3E4AA68676CEFF5DCA26D868470EF39C3D0A536835BC89029D
6D088773C8EFE5F6D632F5C2193AF51B1DF896173565A88D884E0FF7E3CA6816
8220283CA93F698CCEE7D8621A62C7B9082CA06A4858F8BEB082DEDE5F977716
640C4806491E60BE4F2283D642C5D6332536ADADC890C0575E77682FE2976F14
D4E69BA2210E155ECA32D99D539C4E141D6E6F5D5AFF6D5E2A32FD579D48DB7C
30E2141AFD3466692FD8637A5E9C758327E4A99A3A305B938D2B724E6910DA98
3E1C10D2D9F65106F617A63F1AD7A3938EF00979DF3E5041493BE78F705361B8
5DE4A8712B3411A9C1E8F91895EA121A9FD00ED181AD2C4E7F5F50125D6E9B9F
DECDC0B89072D3AAC59FA4C4E5A2EBF0D903656A734DE44E45370A2330434F93
4B9E8F352049B905AFB5A77A9C4FBEE68073B0DD8B81B4A837FB5526A616F38B
60A070F927A9230BD6B1C276FCE13AED2FF7853CBBE98C227A529A06DD2B725B
71E7E79A519CA298F699EB1F58F1452FE7A574890589333909654ABFD985A3EB
C81047EB364B18F3743AB821DF841B8D623E425938A6C0DA5171905CBFDC0DD4
54DB9D9A0887B8271E0CFBE9159DB5262F9E7D7F9B39F0069D25D630689FC709
1269E49F576655BDD6C6D837ECD9B62E3FAC3C000823AC857C9084FA1A291B70
43996C0F4A9D60C8920CDC49AA19540A2D5653385BEB6009A731D555185657C7
164CB1FA3495B6EBC87FEDEFBC63566EF837DA8618E01A3D2901E317FFF1DB29
EDAFC314592767F2821158A288D75F9B6BB23B1B8A4D1DA8F2DCA4D7DAB5FB68
1A844B503CC2C7F189FD34BA634876C8FDFF1A8F83011332C905676BC7617159
534C8EB1BFBA84A80542DC35C452677C51B3C8F154584BA1BC2BE54D1549B509
0E1767ED70FF965A2CCAD6A87F98026139A7991B9F1E3359AC6498FDD859AF2D
BA055CD09F6096D551215A0A872620250FE01BC3F91A892B05B144157EEE792B
F0AB5B2B25AC2AB985EEB5682FAEB723A4CE202428ADE13F8BB6F4514617F102
FB3B4D708658E02E737094E83FFDD04916C0ED91F82D9DBE46C1D7A7CFE25EAF
8D6C7B8BAEFE1710768FB00B8DFEE1487F4767AA7ECCF72FB3A6C4E406F60F33
57D5ACB232444B1CD255FD93B8C39C4C48BABD8822C52B1E1C8CDD0E0DB0E63B
729AF50BDD01F77A74D4E48634B035A6AD57B1CCEBA21BC5A4B33B6521E7F557
8866B62815F6DABBCE3F96C703BFD7EEFA5D2707F73CDFA3047CB94FB7D3917E
82703027DA8E47809220D5EC20D0F0F10AE2CBFE2D5015753AD3498FB9766232
83717B8F2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NJAEYK+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 199 235 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.9004 0.9004 0.9004] sc
758 1627 1215 585 re
f*
4.5 w
/DeviceRGB {} CS
[0 0 0] SC
758 1627 1215 585 re
S
758 817 1215 585 re
f*
758 817 1215 585 re
S
758 7 1215 585 re
f*
758 7 1215 585 re
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
1170.8 1910.8 m
1262 1910.8 l
1262 1946.8 l
1170.8 1946.8 l
1170.8 1946.8 l
1242.8 1928.8 l
1170.8 1910.8 l
h
W*
1028 1928.8 m
1253 1928.8 l
S
Q
1170.8 1910.8 m
1242.8 1928.8 l
1170.8 1946.8 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
1170.8 1730.8 m
1262 1730.8 l
1262 1766.8 l
1170.8 1766.8 l
1170.8 1766.8 l
1242.8 1748.8 l
1170.8 1730.8 l
h
W*
1028 1748.8 m
1253 1748.8 l
S
Q
1170.8 1730.8 m
1242.8 1748.8 l
1170.8 1766.8 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
1170.8 2090.8 m
1262 2090.8 l
1262 2126.8 l
1170.8 2126.8 l
1170.8 2126.8 l
1242.8 2108.8 l
1170.8 2090.8 l
h
W*
1028 2108.8 m
1253 2108.8 l
S
Q
1170.8 2090.8 m
1242.8 2108.8 l
1170.8 2126.8 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
630.801 2104 m
722 2104 l
722 2140 l
630.801 2140 l
630.801 2140 l
702.801 2122 l
630.801 2104 l
h
W*
488 2122 m
713 2122 l
S
Q
630.801 2104 m
702.801 2122 l
630.801 2140 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
1170.8 1280.8 m
1262 1280.8 l
1262 1316.8 l
1170.8 1316.8 l
1170.8 1316.8 l
1242.8 1298.8 l
1170.8 1280.8 l
h
W*
1028 1298.8 m
1253 1298.8 l
S
Q
1170.8 1280.8 m
1242.8 1298.8 l
1170.8 1316.8 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
630.801 1294 m
722 1294 l
722 1330 l
630.801 1330 l
630.801 1330 l
702.801 1312 l
630.801 1294 l
h
W*
488 1312 m
713 1312 l
S
Q
630.801 1294 m
702.801 1312 l
630.801 1330 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
630.801 484 m
722 484 l
722 520 l
630.801 520 l
630.801 520 l
702.801 502 l
630.801 484 l
h
W*
488 502 m
713 502 l
S
Q
630.801 484 m
702.801 502 l
630.801 520 l
S
q
0 2350 m
0 0 l
1990 0 l
1990 2350 l
0 2350 l
h
1173.2 979.602 m
1251.2 932.199 l
1269.8 963.398 l
1191.8 1010.2 l
1191.8 1010.2 l
1244.6 957.398 l
1173.2 979.602 l
h
W*
1028 1087 m
1253 952 l
S
Q
1173.2 979.602 m
1244.6 957.398 l
1191.8 1010.2 l
S
[9 36] 36 d
1028 1118.8 m
1253 1118.8 l
S
/DeviceRGB {} cs
[0 0 0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 92.1844 207.7] Tm
0 0 Td
/F8_0 10.9998 Tf
(0)
[6.115889
0] Tj
0 -18 Td
(1)
[6.115889
0] Tj
0 -36 Td
(2)
[6.115889
0] Tj
37.6156 0 Td
('cheddar')
[2.430956
0
5.4999
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
3.662933
0
2.430956
0] Tj
37.6156 -18 Td
('edam')
[2.430956
0
6.115889
0
6.115889
0
6.115889
0
9.162833
0
2.430956
0] Tj
37.6156 -36 Td
('gouda')
[2.430956
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
6.115889
0
2.430956
0] Tj
-16.3844 18 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-88.8457 0 Td
(cheeses)
[5.4999
0
6.115889
0
6.115889
0
6.115889
0
5.4999
0
6.115889
0
5.4999
0] Tj
-0 -81 Td
(0)
[6.115889
0] Tj
-0 -99 Td
(1)
[6.115889
0] Tj
-16.3844 -63 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-16.3844 -144 Td
(list)
[2.441956
0
2.441956
0
5.4999
0
3.057944
0] Tj
-90.6719 -81 Td
(numbers)
[6.115889
0
6.115889
0
9.162833
0
6.115889
0
6.115889
0
3.662933
0
5.4999
0] Tj
-77.8356 -162 Td
(empty)
[6.115889
0
9.162833
0
6.115889
0
3.057944
0
5.4999
0] Tj
37.6154 -81 Td
(17)
[6.115889
0
6.115889
0] Tj
37.6154 -99 Td
(123)
[6.115889
0
6.115889
0
6.115889
0] Tj
37.6154 -117 Td
(5)
[6.115889
0] Tj
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NJAEYK+Helvetica
%%EOF
